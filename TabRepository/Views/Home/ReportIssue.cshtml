@using TabRepository.ViewModels
@model ReportIssueFormViewModel

@{
    ViewData["Title"] = "Report Issue";
}

<div class="flex-container-row">
    <form id="bug-report-form" class="form-horizontal" asp-controller="Home" asp-action="ProcessIssue">
        <h2>Report Issue</h2>
        <div class="row row-no-margin">
            <div class="col-md-6">
                <div class="form-group owner">
                    <div class="form-label">
                        <label asp-for="Description"></label>
                    </div>
                    <textarea asp-for="Description" class="form-control form-input"></textarea>
                    <div class="form-label">
                        <span asp-validation-for="Description" style="color: red"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Errors"></label>
                    </div>
                    <textarea asp-for="Errors" class="form-control form-input"></textarea>
                    <div class="form-label">
                        <span asp-validation-for="Errors" style="color: red"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-no-margin">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Page"></label>
                    </div>
                    <select asp-for="Page" asp-items="Model.Pages" class="form-control form-input"></select>
                    <div class="form-label">
                        <span asp-validation-for="Page" style="color: red"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="DeviceType"></label>
                    </div>
                    <select asp-for="DeviceType" asp-items="Model.DeviceTypes" class="form-control form-input"></select>
                    <div class="form-label">
                        <span asp-validation-for="DeviceType" style="color: red"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-no-margin">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Browser"></label>
                    </div>
                    <select asp-for="Browser" asp-items="Model.Browsers" class="form-control form-input"></select>
                    <div class="form-label">
                        <span asp-validation-for="Browser" style="color: red"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="form-label">
                        @Html.LabelFor(m => m.Image, "Image")
                        <div id="image-upload-container" style="display: none;">
                            <div id="image-upload"></div>
                        </div>
                    </div>
                    @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "btn btn-default form-input file-input" })
                    <div class="form-label">
                        <span id="image-error" class="validation-error" style="color: red"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row row-no-margin">
            <div class="col-md-6">
                <div class="g-recaptcha g-recaptcha-register" data-callback="reCaptchaCheck" data-sitekey="6LcYlqUUAAAAAMXYYEg3u92xlWMsISBh7te4n5we"></div>
                <div class="form-label">
                    <span id="recaptcha-error" class="validation-error" style="color: red"></span>
                </div>
            </div>
        </div>
        <div class="row row-no-margin">
            <div class="col">
                <div class="form-group">
                    <button style="margin-top: 10px;" type="submit" class="btn btn-default button-submit-wide">Report Issue</button>
                </div>
            </div>
        </div>
        @Html.AntiForgeryToken()
    </form>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>
    <script>
    var reCaptchaCheck = function () {
        $('#recaptcha-error').html('');
    }

    $(document).ready(function () {
        $('hr').show();
        $('footer').show();

        imageUpload();

        $("#bug-report-form").on("submit", function (e, data) {
            e.preventDefault();

            var $deferred = $.Deferred();

            // Don't submit form if the image is too large
            if ($('#Image')[0].files.length) {
                if ($('#Image')[0].files[0].size > 1000000) {
                    return
                }
                $('#image-upload').croppie('result', {
                    type: 'blob',
                    size: 'original',
                    format: 'jpeg'
                }).then(function (blob) {
                    $deferred.resolve(blob);
                });
            }
            else {
                $deferred.resolve();
            }

            var recaptcha = $("#g-recaptcha-response").val();
            if (recaptcha === "") {
                $('#recaptcha-error').html('Please check reCAPTCHA');
                return;
            }

            $deferred.then(function (blob) {

                $('.validation-error').html('');
                $('.button-submit-wide').html('<div class="loader"></div>');
                $('.button-submit-wide').addClass('disabled');

                var form = e.target;
                var formData = new FormData(form);

                if (blob) {
                    formData.append('CroppedImage', blob, 'image.jpeg');
                }

                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false
                })
                .then(function (response) {
                    if (response.error) {
                        enableSubmitButton();
                        if (response.error.toLowerCase().includes('file')) {
                            $('#image-error').html(response.error);
                        }
                        else {
                            showFailureBootbox("submitting bug report", response.error);
                        }
                    }
                    else {
                        $('.flex-container-row').html(response);
                    }
                })
                .fail(function (error) {
                    bootbox.alert("Unable to submit bug report. Error: " + error.statusText);
                    enableSubmitButton();
                })
            });
        });

        function enableSubmitButton() {
            $('.button-submit-wide').html('Report Issue');
            $('.button-submit-wide').removeClass('disabled');
        }
    });
    </script>
}
