@model ManageViewModel
@using TabRepository.Models.AccountViewModels
@{
    ViewData["Title"] = "Account";
}

<div id="page" class="flex-container-col" style="align-items: unset;">
    <div class="row row-no-margin">
        <div class="col" align="center">
            <div style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
                <div class="row">
                    <div class="col">
                        <h6>Tab Counts</h6>
                        <table class="table table-striped table-dark table-hover tabversions-table" style="margin-bottom: 10px; text-align: center">
                            <thead>
                                <tr>
                                    <th width="40%"><div class="table-header">Item</div></th>
                                    <th width="30%"><div class="table-header">Count</div></th>
                                    <th width="30%"><div class="table-header">Remaining</div></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Tabs</td>
                                    <td>@Model.TabCount</td>
                                    <td>Unlimited</td>
                                </tr>
                                <tr>
                                    <td>Tab Versions</td>
                                    <td>@Model.TabVersionCount</td>
                                    <td>Unlimited</td>
                                </tr>
                            </tbody>
                        </table>
                        @if (Model.HasPassword)
                        {
                            <a asp-controller="Manage" asp-action="ChangePassword" class="btn btn-default account-button">Change Password</a>
                        }
                        else
                        {
                            <a asp-controller="Manage" asp-action="SetPassword" class="btn btn-default account-button">Create Password</a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col" align="center">
            <div style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
                <div class="card card-profile" style="margin-bottom: 10px;">
                    <div id="profile-image" class="card-header" style="background-image: url('@(Model.ImageFilePath == null ? "/images/TabCollab_icon_white_square_512.png" : Model.ImageFilePath)');"></div>
                    <div class="card-body text-center">
                        <h3>@Model.Username</h3>
                    </div>
                </div>
            </div>
        </div>
        <div id="profile-form-container" class="col" align="center">
            <div style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
                <form id="profile-form" asp-controller="Manage" asp-action="UpdateProfile" data-ajax="true" data-ajax-method="POST" class="card" style="background-color: unset; border: unset;">
                    <div class="form-group">
                        <div class="form-label">
                            <label asp-for="Email"></label>
                        </div>
                        <input asp-for="Email" class="form-control form-input" disabled />
                        <div class="form-label">
                            <span asp-validation-for="Email" style="color: red"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-label image-upload">
                            @Html.LabelFor(m => m.Image, "Profile  Image")
                            <div id="image-upload-container" style="display: none;">
                                <div id="image-upload"></div>
                            </div>
                        </div>
                        @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "btn btn-default form-input file-input disabled" })
                        <div class="form-label">
                            <span id="image-error" class="validation-error" style="color: red"></span>
                        </div>
                    </div>
                    <div>
                        <a id="edit-account-button" data-toggle="tooltip" title="Edit account" class="list-icon float-left white-icon"><i class="fa fa-pencil fa-lg"></i></a>
                        <button id="save-account-button" type="submit" class="btn btn-primary float-right button-save disabled" form="profile-form"> Save</button>
                    </div>
                    @Html.AntiForgeryToken()
                </form>
            </div>
        </div>
    </div>
    @if (Model.Username.ToLower() == "tolleway")
    {
    <div class="row row-no-margin">
        <div id="profile-form-container" class="col" align="center">
            <div style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
                <form id="send-email-form" asp-controller="Account" asp-action="SendEmail" data-ajax="true" data-ajax-method="POST" class="card" style="background-color: unset; border: unset;">
                    <div class="form-group">
                        <div class="form-label">
                            <label for="Username">Username</label>
                        </div>
                        <input class="form-control form-input" type="text" data-val="true" data-val-required="The Username field is required." id="Username" name="Username" value="">
                        <div class="form-label">
                            <span style="color: red" class="field-validation-valid" data-valmsg-for="Username" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-label">
                            <label for="Subject">Subject</label>
                        </div>
                        <input class="form-control form-input" type="text" data-val="true" data-val-required="The Subject field is required." id="Subject" name="Subject" value="">
                        <div class="form-label">
                            <span style="color: red" class="field-validation-valid" data-valmsg-for="Subject" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="form-label">
                            <label for="Username">Message</label>
                        </div>
                        <textarea class="form-control form-input" type="text" data-val="true" data-val-required="The Message field is required." id="Message" name="Message" value=""></textarea>
                        <div class="form-label">
                            <span style="color: red" class="field-validation-valid" data-valmsg-for="Message" data-valmsg-replace="true"></span>
                        </div>
                    </div>
                    <div>
                        <button id="send-email-button" style="width: 108px; height: 38px;" type="submit" class="btn btn-primary float-right" form="send-email-form">Send Email</button>
                    </div>
                    @Html.AntiForgeryToken()
                </form>
            </div>
        </div>
    </div>
    }
</div>

@section scripts
    {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        $(document).ready(function () {
            $('#btn-reactivate-subscription').removeClass('disabled');
            $('#btn-cancel-subscription').removeClass('disabled');

            $('footer').show();

            // Only show tooltips on non-touchscreens
            if (!('ontouchstart' in window)) {
                $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
            }

            var submitButton = $('#save-account-button')

            imageUpload();

            // Enable account fields for edit
            $("#page").on("click", "#edit-account-button", function (e, data) {
                e.preventDefault();

                $('#Firstname').prop('disabled', false);
                $('#Lastname').prop('disabled', false);
                $('#Email').prop('disabled', false);
                $('#Image').removeClass('disabled');
                submitButton.removeClass('disabled');
            });

            $(document).on("submit", "#profile-form", function (e, data) {
                e.preventDefault();

                var $deferred = $.Deferred();

                // Don't submit form if the image is too large
                if ($('#Image')[0].files.length) {
                    if ($('#Image')[0].files[0].size > 1000000) {
                        return
                    }
                    $('#image-upload').croppie('result', {
                        type: 'blob',
                        size: 'original',
                        format: 'jpeg'
                    }).then(function (blob) {
                        $deferred.resolve(blob);
                    });
                }
                else {
                    $deferred.resolve();
                }

                $deferred.then(function (blob) {
                    var form = e.target;
                    var formData = new FormData(form);

                    if (blob) {
                        formData.append('CroppedImage', blob, 'image.jpeg');
                    }

                    var submitButtonHtml = submitButton.html();
                    // Show spinner on submit button and disable it
                    submitButton.html('<div class="loader"></div>');
                    submitButton.addClass('disabled');

                    $.ajax({
                        url: form.action,
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false
                    }).then(function (response) {
                        submitButton.html(submitButtonHtml);

                        form.reset();

                        $('#image-upload').croppie('destroy');

                        // Re-disable all of our fields
                        submitButton.addClass('disabled');
                        $('#Firstname').prop('disabled', true);
                        $('#Firstname').val(response.firstName);
                        $('#Lastname').prop('disabled', true);
                        $('#Lastname').val(response.lastName);
                        $('#Email').prop('disabled', true);
                        $('#Email').val(response.email);
                        $('#Image').addClass('disabled');
                        $("#profile-image").css("background-image", "url(" + response.imageFilePath + ")");
                    }).fail(function (error) {
                        bootbox.alert("Unable to update account information.<br /><br />Error: " + error.responseText);
                        submitButton.html(submitButtonHtml);
                    })
                });
            });

            @if (Model.Username.ToLower() == "tolleway") 
            {
                <text>
                $(document).on("submit", "#send-email-form", function (e, data) {
                    e.preventDefault();

                    var form = e.target;
                    var formData = new FormData(form);
                    var sendEmailButton = $('#send-email-button');

                    var sendEmailButtonHtml = sendEmailButton.html();
                    // Show spinner on submit button and disable it
                    sendEmailButton.html('<div class="loader"></div>');
                    sendEmailButton.addClass('disabled');

                    $.ajax({
                        url: form.action,
                        type: 'POST',
                        data: formData,
                        cache: false,
                        contentType: false,
                        processData: false
                    }).then(function (response) {
                        if (response.error) {
                            showFailureBootbox("sending email", response.error);
                        }
                        else {
                            bootbox.alert("Email sent to " + response.email);
                            form.reset();
                        }

                        sendEmailButton.html(sendEmailButtonHtml);
                        sendEmailButton.removeClass('disabled');
                    }).fail(function (error) {
                        bootbox.alert("Unable to update account information.<br /><br />Error: " + error.responseText);
                        sendEmailButton.html(sendEmailButtonHtml);
                        sendEmailButton.removeClass('disabled');
                    })
                });
                </text>
            }
        });
    </script>
}
