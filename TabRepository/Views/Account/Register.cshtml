@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<div id="register-container">
    <div class="center-form-outer-container">
        <div class="center-form-inner-container">
            <h2>Register</h2>
            <form asp-controller="Account" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" id="register-form" data-ajax="true" method="post" enctype="multipart/form-data" class="form-horizontal form-center">
                <h4>Create your account</h4>
                <div asp-validation-summary="All"></div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="AccountType"></label><br />
                        <input type="radio" id="free" asp-for="AccountType" value="0" /> Free<br />
                        <input type="radio" id="subscription" asp-for="AccountType" value="1" /> Subscription
                    </div>
                    <span asp-validation-for="AccountType"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Username"></label>
                    </div>
                    <input asp-for="Username" class="form-control form-input" />
                    <span asp-validation-for="Username"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="FirstName"></label>
                    </div>
                    <input asp-for="FirstName" class="form-control form-input" />
                    <span asp-validation-for="FirstName"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="LastName"></label>
                    </div>
                    <input asp-for="LastName" class="form-control form-input" />
                    <span asp-validation-for="LastName"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Email"></label>
                    </div>
                    <input asp-for="Email" class="form-control form-input" />
                    <span asp-validation-for="Email"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Password"></label>
                    </div>
                    <input asp-for="Password" class="form-control form-input" />
                    <span asp-validation-for="Password"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="ConfirmPassword"></label>
                    </div>
                    <input asp-for="ConfirmPassword" class="form-control form-input" />
                    <span asp-validation-for="ConfirmPassword"></span>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        @Html.LabelFor(m => m.Image, "Profile Image")
                    </div>
                    @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "btn btn-default form-input" })
                    @Html.ValidationMessageFor(m => m.Image)
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-default button-submit-wide">Register</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
<script>
    $(document).ready(function () {
        onResize();
        $('footer').show();

        // Show information regarding free account
        $(document).on("click", "#free", function (e, data) {
            bootbox.dialog({
                message: "Free TabCollab Account<br /><br />With the free TabCollab account, you get 50 free tab version uploads for your own projects and unlimited uploads to the projects of other musicians.<br /><br />This means that tab version uploads by other musicians to your projects count towards your 50 tab version limit. Once you reach 50 tab versions, you can still view your tab versions in a read-only fashion, and continue to contribute to the projects of other musicians. You can find your current tab version count in the Account page after you finish registering.<br /><br />HOWEVER, for $50/year (less than $5/month) you can sign up for a subscription account and get UNLIMITED tab version uploads.",
                buttons: {
                    confirm: {
                        label: 'Close',
                        className: 'btn-default'
                    },
                }
            });
        });

        // Show information regarding subscription account
        $(document).on("click", "#subscription", function (e, data) {
            bootbox.dialog({
                message: "Subscription TabCollab Account<br /><br />With the subscription-based TabCollab account, you get UNLIMITED tab version uploads for your projects, as well as unlimited uploads to the projects of other musicians.<br /><br />We do not store you credit card information, so you will need to manually renew your subscription each year. We'll send you a reminder.<br /><br />$50/year (less than $5/month)",
                buttons: {
                    confirm: {
                        label: 'Close',
                        className: 'btn-default'
                    },
                }
            });
        });

        $(document).on("change", "#Image", function (e, data) {
            // Make sure the image size is less than 1MB
            if (this.files.length) {
                if (this.files[0].size > 1000000) {
                    if (!$(".file-validation").length) {
                        // Append it to the validation-summary-*, in case this is a summary after a failed submit to the server
                        $(".validation-summary-valid ul").append("<li class='file-validation'>Image size limit is 1 MB.</li>");
                        $(".validation-summary-errors ul").append("<li class='file-validation'>Image size limit is 1 MB.</li>");
                    }
                    $('.button-submit-wide')[0].classList.add("disabled");
                }
                else {
                    if ($(".file-validation").length) {
                        $(".file-validation").remove();
                    }
                    $('.button-submit-wide')[0].classList.remove("disabled");
                }
            }
            else {
                if ($(".file-validation").length) {
                    $(".file-validation").remove();
                }
                $('.button-submit-wide')[0].classList.remove("disabled");
            }
        });

        $(document).on("submit", function (e, data) {
            // Show spinner on reset button
            $('.button-submit-wide').html('<div class="loader"></div>');

            e.preventDefault();

            var form = e.target;
            var formData = new FormData(form);

            $.ajax({
                url: form.action,
                type: 'POST',
                data: formData,
                cache: false,
                contentType: false,
                processData: false
            })
                .then(function (data) {
                    $('.button-submit-wide').html('Register');
                    $('#register-container').html(data);
                    $.validator.unobtrusive.parse($("#register-form"));
                    onResize();
                })
                .fail(function (error) {
                    bootbox.dialog({
                        message: "An error occurred while submitting the form.<br /><br />Error: " + error.statusText,
                        buttons: {
                            confirm: {
                                label: 'Close',
                                className: 'btn-default'
                            },
                        }
                    });
                });
        });

        $(document).on('hidden.bs.modal', function () {
            $('.button-submit-wide').html('Register');
        });

        // Make sure the treeview/table height is set properly on resize
        function onResize() {
            $('.center-form-outer-container').css('height', $('#register-container').outerHeight());
        };
        window.addEventListener("resize", onResize);
    });
</script>
}
