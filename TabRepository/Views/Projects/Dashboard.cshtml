@model IEnumerable<TabRepository.ViewModels.ProjectIndexViewModel>
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/jstreestyle.css" rel="stylesheet" />
<link href="~/css/main.css" rel="stylesheet" />

<div id="page">
    <div class="buttons-container">
        <div id="new-project-button">
            <button class="btn btn-primary">New Project</button>
        </div>
        <div id="new-album-button-container">
            <button class="btn btn-primary" disabled>New Album</button>
        </div>
        <div id="new-tab-button-container">
            <button class="btn btn-primary pull-right" disabled>New Tab</button>
        </div>
        <div id="new-tab-version-button-container">
            <button class="btn btn-primary" disabled>New Tab Version</button>
        </div>
    </div>
    <div id="treeTableContainer">
        <div class="treeWrapperContainer">
            <b><span class="treeLabel">My Projects</span></b>
            <div class="treeWrapperTop">
                <div class="jstree ownerTree">
                    @foreach (var project in Model)
                    {
                        @if (project.IsOwner)
                        {
                            <ul>
                                <li id="project @project.Id">
                                    @project.Name
                                    @foreach (var album in project.Albums)
                                    {
                                        <ul>
                                            <li id="album @album.Id" data-jstree='{"icon":"/images/cd(16x12).png"}'>
                                                @album.Name
                                                @foreach (var tab in album.Tabs)
                                                {
                                                    <ul>
                                                        <li id="tab @tab.Id" data-jstree='{"icon":"/images/eighthnote(16x23).png"}'>@tab.Name</li>
                                                    </ul>
                                                }
                                            </li>
                                        </ul>
                                    }
                                </li>
                            </ul>
                        }
                    }
                </div>
            </div>
            <div class="splitter-horizontal"></div>
            <b><span class="treeLabel">Contributor Projects</span></b>
            <div class="treeWrapperBottom">
                <div class="jstree contributorTree">
                    @foreach (var project in Model)
                    {
                        @if (!project.IsOwner)
                        {
                            <ul>
                                <li id="project @project.Id">
                                    @project.Name
                                    @foreach (var album in project.Albums)
                                    {
                                        <ul>
                                            <li id="album @album.Id" data-jstree='{"icon":"/images/cd(16x12).png"}'>
                                                @album.Name
                                                @foreach (var tab in album.Tabs)
                                                {
                                                    <ul>
                                                        <li id="tab @tab.Id" data-jstree='{"icon":"/images/eighthnote(16x23).png"}'>@tab.Name</li>
                                                    </ul>
                                                }
                                            </li>
                                        </ul>
                                    }
                                </li>
                            </ul>
                        }
                    }
                </div>
            </div>
        </div>
        <div id="splitter"></div>
        <div id="tab-versions-table-container">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th width="35%">Description</th>
                        <th width="20%">Contributor</th>
                        <th width="20%">Date Added</th>
                        <th width="10%">Version</th>
                        <th width="5%"></th>
                        <th width="5%"></th>
                        <th width="5%"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr></tr>
                </tbody>
            </table>
        </div>
    </div>

    <div id='tab-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetTabFormPartialView", "Tabs")'>
        <div id='tab-form-container'>
        </div>
    </div>

    <div id='project-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetProjectFormPartialView", "Projects")'>
        <div id='project-form-container'>
        </div>
    </div>

    <div id='album-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetAlbumFormPartialView", "Albums")'>
        <div id='album-form-container'>
        </div>
    </div>

    <div id='tab-version-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetTabVersionFormPartialView", "TabVersions")'>
        <div id='tab-version-form-container'>
        </div>
    </div>
</div>

@section scripts
    {
    <script src="~/js/jstree.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/jquery-resizable/dist/jquery-resizable.min.js"></script>

    <script>
        $(document).ready(function () {
            $('hr').show();
            $('footer').show();

            $(function () {
                $(".jstree").jstree({
                    "core": {
                        check_callback: true
                    }
                });
            })

            // Vertical resizing of treeviews
            $(".treeWrapperTop").resizable({
                handleSelector: ".splitter-horizontal",
                resizeWidth: false
            });

            // Horizontal resizing of treeviews and table
            $(".treeWrapperContainer").resizable({
                handleSelector: "#splitter",                
                resizeHeight: false,
                onDrag: function (e, $el, newWidth, newHeight, opt) {
                    if ($(document).width() < 700) {
                        // limit box size
                        if (newWidth > 200) {
                            newWidth = 200;
                        }
                    }
                    else {
                        // limit box size
                        if (newWidth > 500) {
                            newWidth = 500;
                        }
                    }

                    $el.width(newWidth);

                    // explicitly return **false** if you don't want
                    // auto-height computation to occur
                    return false;
                }
            });       

        var currentModal, selectedTree;

        // Selecting a node
        // When a node is selected determine if it is a tab or project and display the corresponding table
        // Tab: Tab versions table, Project: Empty table
        $(".jstree").on("select_node.jstree", function (e, data) {
            if ($(this).hasClass('ownerTree')) {
                $('.contributorTree').jstree("deselect_all");
            }
            else {
                $('.ownerTree').jstree("deselect_all");
            }

            selectedTree = $(this);

            // This syntax is needed to get nodeId in "tab 1" format instead of ["tab 1"] format
            var nodeId = $(this).jstree().get_selected(true)[0].id;

            if (nodeId.substring(0, 3) == 'tab') {
                nodeId = nodeId.substring(4);

                //var $tab-versions-table-container = $('#tab-versions-table-container'),
                var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions")?id=' + nodeId;

                $.get(url, function (data) {
                    $('#tab-versions-table-container').empty().append(data);

                });
                $('#new-tab-button-container').empty().append('<button class="btn btn-primary" disabled>New Tab</button>');
                $('#new-album-button-container').empty().append('<button class="btn btn-primary" disabled>New Album</button>');

                var actionLink = '@Html.ActionLink("New Tab Version", "New", "TabVersions", new { id = -1 }, new { @class = "btn btn-primary", id = "new-tab-version-button" })'
                actionLink = actionLink.replace('-1', nodeId);
                $('#new-tab-version-button-container').empty().append(actionLink);
            }
            else if (nodeId.substring(0, 5) == 'album') {
                nodeId = nodeId.substring(6);
                var actionLink = '@Html.ActionLink("New Tab", "New", "Tabs", new { id = -1 }, new { @class = "btn btn-primary", id = "new-tab-button" })'
                actionLink = actionLink.replace('-1', nodeId);
                $('#new-tab-button-container').empty().append(actionLink);
                $('#new-album-button-container').empty().append('<button class="btn btn-primary" disabled>New Album</button>');
                $('#new-tab-version-button-container').empty().append('<button class="btn btn-primary" disabled>New Tab Version</button>');

                var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                $.get(url, function (data) {
                    $('#tab-versions-table-container').empty().append(data);
                })
            }
            else if (nodeId.substring(0, 7) == 'project') {
                nodeId = nodeId.substring(8);
                var actionLink = '@Html.ActionLink("New Album", "New", "Albums", new { id = -1 }, new { @class = "btn btn-primary", id = "new-album-button" })'
                actionLink = actionLink.replace('-1', nodeId);
                $('#new-album-button-container').empty().append(actionLink);
                $('#new-tab-button-container').empty().append('<button class="btn btn-primary" disabled>New Tab</button>');
                $('#new-tab-version-button-container').empty().append('<button class="btn btn-primary" disabled>New Tab Version</button>');

                var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                $.get(url, function (data) {
                    $('#tab-versions-table-container').empty().append(data);
                })
            }
        });

        // Deleting a tab version
        $("#page").on("click", "#delete-tabversion-button", function (e, data) {
            e.preventDefault();
            var href = this.href;

            bootbox.confirm("Are you sure you wish to delete this tab version? This cannot be undone.", function (result) {
                if (result) {
                    $.post(href, function (response) {
                        if (!response.success) {
                            bootbox.alert("Unable to delete.");
                        }
                        else {
                            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
                            // Update tab versions table
                            if (nodeId.substring(0, 3) == 'tab') {
                                nodeId = nodeId.substring(4);

                                //var $tab-versions-table-container = $('#tab-versions-table-container'),
                                var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions")?id=' + nodeId;
                                $.get(url, function (data) {
                                    $('#tab-versions-table-container').empty().append(data);
                                });
                            }
                            else if (nodeId.substring(0, 7) == 'project') {
                                nodeId = nodeId.substring(8);
                                var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';
                                $.get(url, function (data) {
                                    $('#tab-versions-table-container').empty().append(data);
                                })
                            }
                        }
                    });
                }
            })
        });

        // Show modal for new tab
        $("#page").on("click", "#new-tab-button", function (e, data) {
            e.preventDefault();

            var url = $('#tab-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 5) == 'album') {
                nodeId = nodeId.substring(6);

                url = url + "?albumId=" + nodeId;

                $.get(url, function (data) {
                    $('#tab-form-container').html(data);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tab-form"));

                    currentModal = $('#tab-form-modal');
                    currentModal.modal('show');
                });
            }
        });

        // Show modal for new project
        $("#page").on("click", "#new-project-button", function (e, data) {
            e.preventDefault();

            var url = $('#project-form-modal').data('url');

            $.get(url, function (data) {
                $('#project-form-container').html(data);

                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#project-form"));

                currentModal = $('#project-form-modal');
                currentModal.modal('show');
            });
        });

        // Show modal for new album
        $("#page").on("click", "#new-album-button", function (e, data) {
            e.preventDefault();

            var url = $('#album-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 7) == 'project') {
                nodeId = nodeId.substring(8);

                url = url + "?projectId=" + nodeId;

                $.get(url, function (data) {
                    $('#album-form-container').html(data);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#album-form"));

                    currentModal = $('#album-form-modal');
                    currentModal.modal('show');
                });
            }
        });

        // Show modal for new tab version
        $("#page").on("click", "#new-tab-version-button", function (e, data) {
            e.preventDefault();

            var url = $('#tab-version-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 3) == 'tab') {
                nodeId = nodeId.substring(4);

                url = url + "?tabId=" + nodeId;

                $.get(url, function (data) {
                    $('#tab-version-form-container').html(data);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tabversion-form"));

                    currentModal = $('#tab-version-form-modal');
                    currentModal.modal('show');
                });
            }
        });

        $(document).on("change", "#contributors-list", function (e, data) {
            e.preventDefault();

            var selected = $(this).find('option:selected'),
                contributorCount = getContributorCount(),
                username = $(this).val(),
                name = selected.text();

            // Create button for contributor and remove from list
            $("#contributors-panels").append("<input type='hidden' class='form-control contributor' name='' value='" + username + "'>");
            $("#contributors-panels").append("<button data-username='" + username + "' data-text='" + name + "' class='contributor-btn btn btn-default'>" + name + "<i class='fa fa-times' style='padding-left: 7px;' /></button>");
            selected.remove();
            $("#contributors-list option[value=default]").prop("selected", true);
        });

        $(document).on("click", ".contributor-btn", function (e, data) {
            e.preventDefault();

            var username = $(this).attr("data-username"),
                text = $(this).attr("data-text");

            // Add contributor back to dropdown list and remove the button
            $("#contributors-list").append("<option value='" + username + "'>" + text + "</option>");
            $(this).remove();
            $("input[value=" + username + "]").remove();
        });

        $("#page").on("submit", function (e, data) {
            e.preventDefault();

            // Loop through all contributors to add index for model binding
            $('.contributor').each(function (index) {
                $(this).attr('name', 'Contributors[' + index + '].Username');
            });

            var form = e.target;
            var formData = new FormData(form);

            // Show spinner on save button
            $($(document.activeElement)[0]).html('<div class="loader"></div>');

            $.ajax({
                url: form.action,
                type: 'POST',
                data: formData,
                cache: false,
                contentType: false,
                processData: false
            })
            .then(function (response) {
                currentModal.modal('hide');
                // Here we're replacing the tabversion table, which include tab id
                // Then we're using that tab id to identify the jstree node
                if (form.id === "tab-form") {
                    var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions", null)?id=' + response.id;

                    $.get(url, function (data) {
                        $('#tab-versions-table-container').empty().append(data);
                    });

                    // Create new tab node and select it - expand and deselect project node
                    var currentNode = $(selectedTree).jstree().get_selected(true)[0];
                    $(selectedTree).jstree().open_node(currentNode.id, false, false);
                    $(selectedTree).jstree().create_node(currentNode.id, { id: "tab " + response.id, text: response.name, icon: "/images/eighthnote(16x23).png"  }, "last", false, false);
                    $(selectedTree).jstree().deselect_node(currentNode.id, false, false);
                    $(selectedTree).jstree().select_node("tab " + response.id, false, false);
                }
                else if (form.id === "tabversion-form") {
                    var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions", null)?id=' + response.id;

                    $.get(url, function (data) {
                        $('#tab-versions-table-container').empty().append(data);
                    });
                }
                else if (form.id === "album-form") {
                    var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)?id=' + response.id;

                    $.get(url, function (data) {
                        $('#tab-versions-table-container').empty().append(data);
                    });

                    var currentNode = $(selectedTree).jstree().get_selected(true)[0];
                    $(selectedTree).jstree().open_node(currentNode.id, false, false);
                    $(selectedTree).jstree().create_node(currentNode.id, { id: "album " + response.id, text: response.name, icon: "/images/cd(16x12).png" }, "last", false, false);
                    $(selectedTree).jstree().deselect_node(currentNode.id, false, false);
                    $(selectedTree).jstree().select_node("album " + response.id, false, false);
                }
                // This will handle new project
                else if (form.id === "project-form") {
                    var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                    $.get(url, function (data) {
                        $('#tab-versions-table-container').empty().append(data);
                    });
                    var currentNode = $('.ownerTree').jstree().get_selected(true)[0];
                    if (currentNode != null) {
                        $('.ownerTree').jstree().deselect_node(currentNode.id, false, false);
                    }
                    $('.ownerTree').jstree().create_node("#", { id: "project " + response.id, text: response.name }, "last", false, false);
                    $('.ownerTree').jstree().select_node("project " + response.id, false, false);
                }
            })
            .fail(function (error) {
                currentModal.modal('hide');
                bootbox.alert("Unable to save. Error code: " + error);
            });
        });

        function getContributorCount() {
            return $('.contributor-btn').length;
        }
    });
    </script>
}

