@using Microsoft.AspNetCore.Identity
@using TabRepository.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form id="search-form" class="form-inline my-2 my-lg-0 search-form" asp-controller="Friends" asp-action="Search" method="get" autocomplete="off">
        <input id="search-input" type="text" class="form-control mr-sm-2" placeholder="Search" name="search">
        <ul class="list-group search-results"></ul>
    </form>
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right bottom-nav">
            <li class="nav-item">
                <a class="nav-link"><i class="notifications-btn fa fa-exclamation-circle fa-lg"></i></a>
                <ul class="list-group notifications" hidden></ul>
            </li>
            <li class="nav-item">
                <a class="nav-link" asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Account</a>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right bottom-nav">
        <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
        <li class="nav-item"><a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
    </ul>
}
