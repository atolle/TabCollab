@model ManageViewModel
@using TabRepository.Models.AccountViewModels
@{
    ViewData["Title"] = "Account";
}

<div id="page" class="flex-container-col" style="align-items: unset;">
    <div class="row row-no-margin">
        <div class="col" align="center">
            <div class="row">
                <div class="col">
                    @if (Model.AccountType == AccountType.Free)
                    {
                        <h3>Free Account</h3>
                        <h5>Total Tab Versions: @Model.TabVersionCount</h5>
                        int tabsRemaining = 50 - Model.TabVersionCount;
                        string color = "inherit";
                        if (tabsRemaining <= 10)
                        {
                            color = "yellow";
                        }
                        if (tabsRemaining <= 0)
                        {
                            color = "red";
                        }
                        <h5 style="color: @color;">@(tabsRemaining) tab versions remaining</h5>

                        <div class="subscription-btn-container">
                            <a asp-controller="Account" asp-action="Subscribe" class="btn btn-primary dashboard-button">Upgrade Account</a>
                        </div>
                    }
                    else
                    {
                        <h3>Subscription Account</h3>
                        <h5>Subscription <span id="subscription-renewal-expiration" style="display: inline">@(Model.HasActiveSubscription == true ? "Renewal" : "Expiration")</span>: @Model.SubsriptionExpiration.Value.ToString("MM/dd/yyyy")</h5>
                        int daysLeft = ((int)(Model.SubsriptionExpiration - DateTime.Now).Value.TotalDays);
                        bool subscriptionExpired = daysLeft < 0;
                        @if (!subscriptionExpired)
                        {
                            string color = daysLeft <= 30 ? "yellow" : "inherit";
                            <h5 style="color: @color;">@(daysLeft.ToString()) days left</h5>
                        }
                        else
                        {
                            <h5 style="color: red;">Subscription expired</h5>
                        }
                            <div class="subscription-btn-container">
                                @if (Model.SubscriptionStatus == SubscriptionStatus.Active)
                                {
                                    <a asp-controller="Account" asp-action="SubscriptionCancel" id="btn-cancel-subscription" class="btn btn-danger dashboard-button">Cancel Auto-Renew</a>
                                    @if (Model.CreditCardLast4 != null)
                                    {
                                        <a asp-controller="Account" asp-action="UpdatePayment" class="btn btn-default dashboard-button">Update Credit Card<br />************@Model.CreditCardLast4 @Model.CreditCardExpiration</a>
                                    }
                                }
                                else if (Model.SubscriptionStatus == SubscriptionStatus.CancelAtPeriodEnd)
                                {
                                    <a asp-controller="Account" asp-action="Subscribe" class="btn btn-primary dashboard-button">Activate Auto-Renew</a>
                                }
                            </div>
                    }
                    @if (Model.HasPassword)
                    {
                        <a asp-controller="Manage" asp-action="ChangePassword" class="btn btn-default dashboard-button">Change Password</a>
                    }
                    else
                    {
                        <a asp-controller="Manage" asp-action="SetPassword" class="btn btn-default dashboard-button">Create Password</a>
                    }
                </div>
            </div>
        </div>
        <div class="col" align="center">
            <div class="card card-profile" style="margin-bottom: 10px;">
                <div id="profile-image" class="card-header" style="background-image: url('@Model.ImageFilePath');"></div>
                <div class="card-body text-center">
                    <h3>@Model.Username</h3>
                </div>
            </div>
        </div>
        <div id="profile-form-container" class="col" align="center">
            <form id="profile-form" asp-controller="Manage" asp-action="UpdateProfile" data-ajax="true" data-ajax-method="POST" class="card" style="background-color: unset; border: unset;">
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Firstname"></label>
                    </div>
                    <input asp-for="Firstname" class="form-control form-input" disabled />
                    <div class="form-label">
                        <span asp-validation-for="Firstname" style="color: red"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Lastname"></label>
                    </div>
                    <input asp-for="Lastname" class="form-control form-input" disabled />
                    <div class="form-label">
                        <span asp-validation-for="Lastname" style="color: red"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        <label asp-for="Email"></label>
                    </div>
                    <input asp-for="Email" class="form-control form-input" disabled />
                    <div class="form-label">
                        <span asp-validation-for="Email" style="color: red"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-label">
                        @Html.LabelFor(m => m.Image, "Profile  Image")
                    </div>
                    @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "btn btn-default form-input file-input disabled" })
                    <div class="form-label">
                        <span id="image-error" class="validation-error" style="color: red"></span>
                    </div>
                </div>
                <div>
                    <a id="edit-account-button" data-toggle="tooltip" title="Edit account" class="list-icon float-left white-icon"><i class="fa fa-pencil fa-lg"></i></a>
                    <button id="save-account-button" type="submit" class="btn btn-primary float-right button-save disabled" form="profile-form"> Save</button>
                </div>
                @Html.AntiForgeryToken()
            </form>
        </div>
    </div>
</div>

@section scripts
    {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        $(document).ready(function () {
            var stripe = Stripe('pk_test_mMmjGjT6aetaMgLCCu14fWGm00wC0SGVLv');

            $('footer').show();

            // Only show tooltips on non-touchscreens
            if (!('ontouchstart' in window)) {
                $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
            }

            var submitButton = $('#save-account-button')

            $(document).on("change", "#Image", function (e, data) {
                // Make sure the image size is less than 1MB
                if (this.files.length) {
                    if (this.files[0].size > 1000000) {
                        $("#image-error").html("Image size limit is 1 MB");
                    }
                    else {
                        $("#image-error").html("");
                    }
                }
                else {
                    $("#image-error").html("");
                }
            });

            // Enable account fields for edit
            $("#page").on("click", "#edit-account-button", function (e, data) {
                e.preventDefault();

                $('#Firstname').prop('disabled', false);
                $('#Lastname').prop('disabled', false);
                $('#Email').prop('disabled', false);
                $('#Image').removeClass('disabled');
                submitButton.removeClass('disabled');
            });

            $(document).on("click", "#btn-cancel-subscription", function (e, data) {
                e.preventDefault();

                var href = this.href,
                    that = this;

                bootbox.prompt("Confirm Cancel Subscription Auto-Renew", function (result) {
                    if (result != null) {
                        if (result.toLowerCase() == 'yes') {
                            $.ajax({
                                type: 'POST',
                                dataType: 'json',
                                traditional: 'true',
                                url: href
                            })
                            .then(function (response) {
                                if (!response.success) {
                                    bootbox.alert("Subscription auto-renew cancellation failed. Please contact TabCollab support at support@tabcollab.com.");
                                }
                                else {
                                    bootbox.alert("Subscription auto-renew has been canceled.");
                                    $('#btn-cancel-subscription').remove();
                                    $('.subscription-btn-container').html('<a class="btn btn-primary dashboard-button" href="/Account/Subscribe">Activate Auto-Renew</a>');
                                    $('#subscription-renewal-expiration').html('Expiration');
                                }
                            })
                            .fail(function (error) {
                                bootbox.alert("Unable to update subscription. Error: " + error.statusText);
                                enableSubmitButton();
                            })
                        }
                        else {
                            bootbox.alert("Subscription not canceled.");
                        }
                    }
                });

                // CSS change to make the title display properly and add prompt text
                $('.modal-header').css('display', 'unset');
                $('.bootbox-body').prepend('<p>Are you sure you wish to cancel your subscription auto-renew?<br />Confirm by typing "yes" below:</p>');
            });

            $(document).on("submit", "#profile-form", function (e, data) {
                e.preventDefault();

                // Don't submit form if the image is too large
                if ($('#Image')[0].files.length) {
                    if ($('#Image').files[0].size > 1000000) {
                        return
                    }
                }

                var form = e.target;
                var formData = new FormData(form);

                var submitButtonHtml = submitButton.html();
                // Show spinner on submit button and disable it
                submitButton.html('<div class="loader"></div>');
                submitButton.addClass('disabled');

                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false
                })
                    .then(function (response) {
                        submitButton.html(submitButtonHtml);

                        form.reset();

                        // Re-disable all of our fields
                        submitButton.addClass('disabled');
                        $('#Firstname').prop('disabled', true);
                        $('#Firstname').val(response.firstName);
                        $('#Lastname').prop('disabled', true);
                        $('#Lastname').val(response.lastName);
                        $('#Email').prop('disabled', true);
                        $('#Email').val(response.email);
                        $('#Image').addClass('disabled');
                        $("#profile-image").css("background-image", "url(" + response.imageFilePath + ")");
                    })
                    .fail(function (error) {
                        bootbox.alert("Unable to update account information.<br /><br />Error: " + error.statusText);
                        submitButton.html(submitButtonHtml);
                    })
            });
        });
    </script>
}
