@using TabRepository.ViewModels;
@model TabRepository.ViewModels.ProjectFormViewModel

@{ 
    List<SelectListItem> listItems = new List<SelectListItem>();
    foreach (ApplicationUser f in Model.Friends)
    {
        if (Model.Contributors != null)
        {
            // Skip any friends that are already contributors
            if (Model.Contributors.Any(c => c.Username == f.UserName))
            {
                continue;
            }
        }
        listItems.Add(new SelectListItem
        {
            Text = f.FirstName + " " + f.LastName + " (" + f.UserName + ")",
            Value = f.UserName
        });
    }
}

<div class="modal-dialog text-left">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            @if (String.IsNullOrEmpty(Model.Name))
            {
                <h4 class="modal-title">New project</h4>
            }
            else
            {
                <h4 class="modal-title">Edit @Model.Name</h4>
            }
            <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <form id="project-form" asp-controller="Projects" asp-action="Save" data-ajax="true" data-ajax-method="POST">
                @Html.ValidationSummary() <!--Prints list of validation errors at top of form-->
                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control form-input" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Description)
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control form-input" })
                    @Html.ValidationMessageFor(m => m.Description)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Image)
                    @Html.TextBoxFor(m => m.Image, new { type = "file", @class = "btn btn-default form-input" })
                    @Html.ValidationMessageFor(m => m.Image)
                </div>
                <div class="form-group">
                    @Html.Label("Contributors")
                    <select id="contributors-list" class="form-control">
                        <option value="default" selected disabled hidden>Add Contributor</option>
                        @foreach (SelectListItem item in listItems)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <div id="contributors-panels">                        
                        @{
                            if (Model.Contributors != null)
                            {
                                @foreach (UserViewModel user in Model.Contributors)
                                {
                                    var name = user.FirstName + " " + user.LastName + " (" + user.Username + ")";
                                    <input type='hidden' class='form-control contributor form-input' name='' value='@user.Username'>
                                    <button data-username='@user.Username' data-text='@name' class='contributor-btn btn btn-default'><div class="contributor-text">@name</div><i class='fa fa-times' style='padding-left: 7px; padding-top: 2px;' /></button>                                
                                }
                            }
                        }
                    </div>
                </div>
                @Html.HiddenFor(m => m.Id)
                @Html.AntiForgeryToken()
            </form>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-primary button-save" form="project-form"> Save</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>
