@{
    ViewBag.Title = "Projects";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="list-loader-wrapper" class="flex-container-col">
    <div class="list-loader"></div>
</div>

<div class="container-fluid" style="display: none;">
    <div id="page">
        <div class="buttons-container">
            <a id="new-project-button" data-toggle="tooltip" title="Add New Project" class="white-icon pull-left add-button" href="@Url.Action("GetProjectFormPartialView", "Projects")"><i class="fa fa-plus fa-3x"></i></a>
        </div>

        <div id="project-list-wrapper"></div>

        <div id='project-form-modal' class='modal fade' align="center">
            <div id='project-form-container'>
            </div>
        </div>

        <div id='album-form-modal' class='modal fade' align="center">
            <div id='album-form-container'>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script src="~/js/jstree.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

    <script>
$(document).ready(function () {
    repopulateProjectList()
        .then(function (result) {
            $('#list-loader-wrapper').remove();
            $('.container-fluid').show();
            $('hr').show();
            $('footer').show();
        })
        .catch(function (error) {
            bootbox.alert("Unable to load projects. Error: " + error.statusText);
        });

    // Only show tooltips on non-touchscreens
    if (!('ontouchstart' in window)) {
        $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
    }

    // Deleting a project
    $("#page").on("click", "#delete-project-button", function (e, data) {
        e.preventDefault();

        var href = this.href,
            that = this;

        bootbox.prompt("Confirm Delete", function (result) {
            if (result == $(that).attr("data-name")) {
                $.ajax({
                    type: 'DELETE',
                    dataType: 'json',
                    traditional: 'true',
                    url: href
                })
                .then(function (response) {
                    if (!response.success) {
                        bootbox.alert("Unable to delete.");
                    }
                    else {
                        repopulateProjectList();
                    }
                })
            }
            else if (result != null) {
                bootbox.alert("Name did not match.");
            }
        });

        // CSS change to make the title display properly and add prompt text
        $('.modal-header').css('display', 'unset')
        $('.bootbox-body').prepend("<p>Are you sure you wish to delete this project? This cannot be undone.<br />Confirm by typing the project's name below:</p>")
    });

    // Show modal for new project
    $("#page").on("click", "#new-project-button", function (e, data) {
        e.preventDefault();

        var href = this.href;

        $.ajax({
            url: href,
            type: 'GET',
        })
            .then(function (data) {
                $('#project-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#project-form"));

                currentModal = $('#project-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show project form. Error: " + error.statusText);
            })
    });

    // Show modal for edit project
    $("#page").on("click", "#edit-project-button", function (e, data) {
        e.preventDefault();

        var href = this.href + "/?projectId=" + $(this).attr("data-project-id");

        $.ajax({
            url: href,
            type: 'GET',
        })
            .then(function (data) {
                $('#project-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#project-form"));

                currentModal = $('#project-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show project form. Error: " + error.statusText);
            })
    });

    $("#page").on("click", ".show-buttons-icon", function (e, data) {
        // Only show tooltips on non-touchscreens
        if (!('ontouchstart' in window)) {
            $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
        }

        var parent = $(this).parent();

        $(parent).hide();
        $(parent).siblings('.item-container').show(200);
        // Wait until the expansion animation is complete to show the buttons
        setTimeout(function () {
            $(parent).siblings('.item-container').children().css("visibility", "visible");
        }, 200)
        $(parent).siblings('.hide-items-icon-container').show();
    });

    $("#page").on("click", ".hide-buttons-icon", function (e, data) {

        var parent = $(this).parent();

        $(parent).hide();
        $(parent).siblings('.item-container').children().css("visibility", "hidden");
        $(parent).siblings('.item-container').hide(200);
        $(parent).siblings('.show-items-icon-container').show();
    });

    $(document).on("change", "#contributors-list", function (e, data) {
        e.preventDefault();

        var selected = $(this).find('option:selected'),
            contributorCount = getContributorCount(),
            username = $(this).val(),
            name = selected.text();

        // Create button for contributor and remove from list
        $("#contributors-panels").append("<input type='hidden' class='form-control contributor' name='' value='" + username + "'>");
        $("#contributors-panels").append("<button data-username='" + username + "' data-text='" + name + "' class='contributor-btn btn btn-default'><div class='contributor-text'>" + name + "</div><i class='fa fa-times' style='padding-left: 7px; padding-top: 2px;' /></button>");
        selected.remove();
        $("#contributors-list option[value=default]").prop("selected", true);
    });

    $(document).on("click", ".contributor-btn", function (e, data) {
        e.preventDefault();

        var username = $(this).attr("data-username"),
            text = $(this).attr("data-text");

        // Add contributor back to dropdown list and remove the button
        $("#contributors-list").append("<option value='" + username + "'>" + text + "</option>");
        $(this).remove();
        $("input[value=" + username + "]").remove();
    });

    $("#page").on("submit", function (e, data) {
        e.preventDefault();

        // Loop through all contributors to add index for model binding
        $('.contributor').each(function (index) {
            $(this).attr('name', 'Contributors[' + index + '].Username');
        });

        var form = e.target;
        var formData = new FormData(form);

        // Show spinner on save button
        $('.button-save').html('<div class="loader"></div>');

        $.ajax({
            url: form.action,
            type: 'POST',
            data: formData,
            cache: false,
            contentType: false,
            processData: false
        })
        .then(function (response) {
            currentModal.modal('hide');
            // Call GetProjectListPartialView to repopulate the project list
            repopulateProjectList();
        })
        .fail(function (error) {
            currentModal.modal('hide');
            bootbox.alert("Unable to save project. Error: " + error.statusText);
        })
    });

    function repopulateProjectList() {
        return new Promise((resolve, reject) => {
            var url = '@Url.Action("GetProjectListPartialView", "Projects", null)';

            $.get(url, function (data) {
                $('#project-list-wrapper').empty().append(data);
            })
                .then(resolve)
                .fail(reject)
        })
    }

    function getContributorCount() {
        return $('.contributor-btn').length;
    }
});
    </script>
}





