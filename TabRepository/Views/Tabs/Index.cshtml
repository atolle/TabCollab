@{
    ViewBag.Title = "Tabs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div id="page">
        <div class="buttons-container">
            <a id="new-tab-button" data-toggle="tooltip" title="Add new tab" class="white-icon pull-left add-button" href="@Url.Action("GetProjectSelectionPartialView", "Projects")"><i class="fa fa-plus fa-3x"></i></a>
        </div>

        <div class="list-loader"></div>

        <div id="tab-list-wrapper"></div>

        <div id='tab-form-modal' class='modal fade' align="center">
            <div id='tab-form-container'>
            </div>
        </div>

        <div id='tabversion-form-modal' class='modal fade' align="center">
            <div id='tabversion-form-container'>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
            integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
            crossorigin="anonymous"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>    
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>

    <script>
$(document).ready(function () {
    repopulateTabList()
        .then(function (result) {
            $('.list-loader').remove();
            $('hr').show();
            $('footer').show();
            $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
        })
        .catch(function (error) {
            bootbox.alert("Unable to load tabs. Error: " + error.statusText);
        });

    // Deleting an album
    $("#page").on("click", "#delete-tab-button", function (e, data) {
        e.preventDefault();
        var href = this.href;

        bootbox.confirm("Are you sure you wish to delete this tab? This cannot be undone.", function (result) {
            if (result) {
                $.ajax({
                    url: href,
                    type: 'DELETE',
                })
                .then(function (response) {
                    repopulateTabList();
                })
                .fail(function (error) {
                    bootbox.alert("Unable to delete tab. Error: " + error.statusText);
                })
            }
        });
    });

    // Show modal for new project
    $("#page").on("click", "#new-tab-button", function (e, data) {
        e.preventDefault();

        var href = this.href;

        $.ajax({
            url: href,
            type: 'GET',
        })
        .then(function (data) {
            $('#tab-form-container').html(data);

            // Client side validation for dynamic modal injection
            $.validator.unobtrusive.parse($("#tab-form"));

            currentModal = $('#tab-form-modal');
            currentModal.modal('show');
        })
        .fail(function (error) {
            bootbox.alert("Unable to show tab form. Error: " + error.statusText);
        })
    });

    // Show modal for edit album
    $("#page").on("click", "#edit-tab-button", function (e, data) {
        e.preventDefault();

        var href = this.href + "/?albumId=" + $(this).attr("data-album-id") + "&tabId=" + $(this).attr("data-tab-id");

        $.ajax({
            url: href,
            type: 'GET',
        })
        .then(function (data) {
            $('#tab-form-container').html(data);
            // Client side validation for dynamic modal injection
            $.validator.unobtrusive.parse($("#tab-form"));

            currentModal = $('#tab-form-modal');
            currentModal.modal('show');

        })
        .fail(function (error) {
            bootbox.alert("Unable to show tab form. Error: " + error.statusText);
        })
    });

    // Show modal for new tab
    $("#page").on("click", "#new-tabversion-button", function (e, data) {
        e.preventDefault();

        var href = this.href + "/?tabId=" + $(this).attr("data-tab-id");

        $.ajax({
            url: href,
            type: 'GET',
        })
            .then(function (data) {
                $('#tabversion-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#tabversion-form"));

                currentModal = $('#tabversion-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show tab form. Error: " + error.statusText);
            })
    });

    $("#page").on("click", ".show-items-icon-container", function (e, data) {
        $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });

        var that = this;

        $(this).hide();
        $(this).siblings('.tab-list').children('.item-container').show(200);
        // Wait until the expansion animation is complete to show the buttons
        setTimeout(function () {
            $(that).siblings('.tab-list').children('.item-container').children().css("visibility", "visible");
        }, 200)
        $(this).siblings('.hide-items-icon-container').show();
    });

    $("#page").on("click", ".hide-items-icon-container", function (e, data) {
        $(this).hide();
        $(this).siblings('.tab-list').children('.item-container').children().css("visibility", "hidden");
        $(this).siblings('.tab-list').children('.item-container').hide(200);
        $(this).siblings('.show-items-icon-container').show();
    });

    $("#page").on("click", ".project-selection-panel", function (e, data) {
        e.preventDefault();

        var that = this;

        // Give modal time to close
        setTimeout(function () {
            var href = "@Url.Action("GetAlbumSelectionPartialView", "Albums")" + "/?projectId=" + $(that).attr("data-project-id");

            $.ajax({
                url: href,
                type: 'GET',
            })
                .then(function (data) {
                    $('#tab-form-container').html(data);
                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tab-form"));

                    currentModal = $('#tab-form-modal');
                    currentModal.modal('show');

                })
                .fail(function (error) {
                    bootbox.alert("Unable to show tab form. Error: " + error.statusText);
                })
        }, 500)
    });

    $("#page").on("click", ".album-selection-panel", function (e, data) {
        e.preventDefault();

        var that = this;

        // Give modal time to close
        setTimeout(function () {
            var href = "@Url.Action("GetTabFormPartialView", "Tabs")" + "/?albumId=" + $(that).attr("data-album-id");

            $.ajax({
                url: href,
                type: 'GET',
            })
                .then(function (data) {
                    $('#tab-form-container').html(data);
                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tab-form"));

                    currentModal = $('#tab-form-modal');
                    currentModal.modal('show');

                })
                .fail(function (error) {
                    bootbox.alert("Unable to show tab form. Error: " + error.statusText);
                })
        }, 500)
    });

    $("#page").on("submit", function (e, data) {
        e.preventDefault();

        var form = e.target;
        var formData = new FormData(form);

        // Show spinner on save button
        $('.button-save').html('<div class="loader"></div>');

        $.ajax({
            url: form.action,
            type: 'POST',
            data: formData,
            cache: false,
            contentType: false,
            processData: false
        })
        .then(function (response) {
            currentModal.modal('hide');
            // Call GetTabListPartialView to repopulate the tab list
            repopulateTabList();
        })
        .fail(function (error) {
            currentModal.modal('hide');
            bootbox.alert("Unable to save. Error: " + error.statusText);

        })
    });

    function repopulateTabList() {
        return new Promise((resolve, reject) => {
            var url = '@Url.Action("GetTabListPartialView", "Tabs", null)';

            $.get(url, function (data) {
                $('#tab-list-wrapper').empty().append(data);
            })
            .then(function (result) {
                // Add sortable functionality to all owned tabs
                $(".tab-list-sort").each(function () {
                    var that = this;
                    $(this).sortable({
                        containment: $(that).parent(),
                        placeholder: "placeholder",
                        cursor: "pointer",
                        update: function (event, ui) {
                            var data = { tabIds: $(this).sortable('toArray') };

                            // POST to server using $.post or $.ajax
                            $.ajax({
                                data: data,
                                type: 'POST',
                                dataType: 'json',
                                traditional: 'true',
                                url: '@Url.Action("ReorderTabs", "Tabs")'
                            });
                        }
                    });
                })
            })
            .then(resolve)
            .fail(reject)
        })
    }
});
    </script>
}
