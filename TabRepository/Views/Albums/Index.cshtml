@model IEnumerable<TabRepository.ViewModels.AlbumIndexViewModel>
    @{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <div class="buttons-container">
        <div id="new-album-button">
            @Html.ActionLink("New Album", "New", "Albums", null, new { @class = "btn btn-primary" })
        </div>
    </div>


    <div id="album-list-wrapper">
        <div class="row">
            @foreach (var album in Model)
        {
                <div class="col-md-4 m-b-lg">
                    <div class="panel panel-default panel-profile">
                        <div class="panel-heading" style="background-image: url('@album.ImageFilePath');"></div>
                        <div class="panel-body text-center">
                            <h3>@album.Name</h3>
                            <p class="m-b">Owner: @album.Owner</p>
                            <div>
                                @Html.ActionLink("New Tab", "New", "Tabs", new { id = album.Id }, new { @class = "btn btn-primary pull-left" })
                                @Html.ActionLink("Delete", "AjaxDelete", "Albums", new { id = album.Id }, new { @class = "btn btn-danger pull-right", id = "delete" })
                            </div>
                        </div>
                    </div>
                </div>
        }
        </div>
    </div>

    <div id='album-form-modal' class='modal fade' data-url='@Url.Action("GetAlbumFormViewModel", "Albums")'>
        <div id='album-form-container'>
        </div>
    </div>

    @section scripts
{
        <script src="~/js/jstree.min.js"></script>
        <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

        <script>
    $(document).ready(function () {

        // Deleting a project
        $(document).on("click", "#delete", function (e, data) {
            e.preventDefault();
            var href = this.href;

            bootbox.confirm("Are you sure you wish to delete this album? This cannot be undone.", function (result) {
                if (result) {
                    $.post(href, function (response) {
                        if (!response.success) {
                            bootbox.alert("Unable to delete.");
                        }
                        else {
                            repopulateProjectList();
                        }
                    });
                }
            });
        });

        // Show modal for new project
        $(document).on("click", "#new-album-button", function (e, data) {
            e.preventDefault();

            var url = $('#album-form-modal').data('url');

            $.get(url, function (data) {
                $('#album-form-container').html(data);

                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#album-form"));

                currentModal = $('#album-form-modal');
                currentModal.modal('show');
            });
        });

        // Trick to get file data to come over via Ajax, though this does not replace the table in the partial view
        window.addEventListener("submit", function (e) {
            var formHtml = e.target;
            var form = $("#" + formHtml.id);
            var formAgain = document.forms["album-form"];

            // We're either adding/updating a tab, project, or tab version
            if (form.valid()) {
                if (formHtml.dataset.ajax) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    var xhr = new XMLHttpRequest();
                    xhr.open(formHtml.method, formHtml.action);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 4 && xhr.status == 200) {
                            if (formHtml.dataset.ajaxUpdate) {
                                var updateTarget = document.querySelector(formHtml.dataset.ajaxUpdate);
                                if (updateTarget) {
                                    updateTarget.innerHTML = xhr.responseText;
                                }
                            }
                        }
                    };
                    xhr.send(new FormData(formHtml));

                    currentModal.modal('hide');

                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                // Call GetAlbumListPartialView to repopulate the project list
                                repopulateAlbumList();
                            } else {
                                handleSaveError(xhr.status);
                            }
                        }
                    };
                }
            }
        }, true);

        function handleSaveError(statusCode) {
            bootbox.alert("Unable to save. Error code: " + statusCode);
        }

            function repopulateAlbumList() {
            var url = '@Url.Action("GetAlbumListPartialView", "Albums", null)';

            $.get(url, function (data) {
                $('#album-list-wrapper').empty().append(data);
            });
        }
    });
        </script>
    }





