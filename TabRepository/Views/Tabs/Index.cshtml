@using TabRepository.ViewModels
@model TabIndexViewModel
@{
    ViewBag.Title = "Tabs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/css/jstreestyle.css" rel="stylesheet" />
<style type="text/css">
    @foreach (var project in Model.ProjectIndexViewModels)
    {
        <text>
        .project-@project.Id-image {
            background-image: url("@(project.ImageFilePath == null ? "/images/TabCollab_icon_white_square_512.png" : project.ImageFilePath)") !important;
            background-size: cover !important;
            background-repeat: no-repeat !important;
            background-position: center center !important;
        }
        </text>
        foreach (var album in project.Albums)
        {
            <text>
            .album-@album.Id-image {
                background-image: url("@(album.ImageFilePath == null ? "/images/TabCollab_icon_white_square_512.png" : album.ImageFilePath)") !important;
                background-size: cover !important;
                background-repeat: no-repeat !important;
                background-position: center center !important;
            }
            </text>
        }
    }
</style>
<div id="tutorial-modal" class="modal fade">
    <div class="modal-dialog text-left">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tabs Page Tutorial</h4>
                <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="page-1">
                    Welcome to the Tabs page! This is where you will probably spend most of your time on TabCollab. From here, you can:
                    <p>
                        <ul>
                            <li>Create/edit/delete projects, albums, and tabs</li>
                            <li>Add/edit/delete tab versions</li>
                            <li>Add/remove contributors</li>
                            <li>Download and play your tab versions</li>
                        </ul>
                    </p>
                    The next few pages are a brief tutorial to help you get going. You can always re-open the tutorial from the top of this page.
                </div>
                <div id="page-2" style="display: none;">
                    <h6 style='text-decoration: underline'>Creating a New Project</h6>
                    <p>
                        To create a new project, select <button class="btn btn-primary dashboard-button">New Project</button>
                    </p>
                    <p>
                        Fill out the fields and upload a project image if you wish. You can also add contributors, which will give other users access to this project. Look for this drop down list:
                    </p>
                    <div class="form-group">
                        <label for="Contributors">Contributors</label>
                        <select id="contributors-list" class="form-control">
                            <option value="default" selected="" disabled="" hidden="">Add Contributor</option>
                        </select>
                    </div>
                    <p>
                        The list of contributors is pulled directly from your friends list, so the drop down list will be empty until you add friends.
                    </p>
                    <p>
                        Once you save the new project, you'll see it in the tree on the left side of the page.
                    </p>
                    <div style="display: flex; justify-content: center">
                        <img src="~/images/first-project.png" />
                    </div>
                </div>
                <div id="page-3" style="display: none;">
                    <h6 style='text-decoration: underline'>Using the Tree</h6>
                    <p>
                        The tree is where you access all of your items:
                        <ul>
                            <li>Projects</li>
                            <li>Albums</li>
                            <li>Tabs</li>
                        </ul><span style="color: rgb(134, 192, 144)">My Projects</span> shows projects that you own.<br /><span style="color: rgb(134, 192, 144)">Their Projects</span> shows projects for which you are a contributor. <span style="color: rgb(134, 192, 144)">Their Projects</span> is where your contributors will access your projects.
                    <p>
                        <div style="display: flex; justify-content: center">
                            <img src="~/images/full-tree.png" />
                        </div>
                    </p>
                </div>
                <div id="page-4" style="display: none;">
                    <h6 style='text-decoration: underline'>Using the Tree cont.</h6>
                    <p>
                        You can delete projects, albums, and tabs by right-clicking them. This right-click feature is only available for <span style="color: rgb(134, 192, 144)">My Projects</span>.
                    </p>
                    <p>
                        <div style="display: flex; justify-content: center">
                            <img src="~/images/tree-delete.png" />
                        </div>
                    </p>
                    <p>
                        You can reorder tabs and albums and move them to different parents by click-dragging.
                    </p>
                    <p>
                        The buttons at the top of the page will change based on which item in the tree you have selected. For example, if you select a tab, you'll see <button class="btn btn-primary dashboard-button">New Tab</button> change to <button class="btn btn-primary dashboard-button">Edit Tab</button>
                        <br />
                        You'll also see <button class="btn btn-primary dashboard-button">New Tab Version</button> become available.
                    </p>
                </div>
                <div id="page-5" style="display: none;">
                    <h6 style='text-decoration: underline'>Creating and Editing Items</h6>
                    <p>
                        To create a new item
                    </p>
                    <ol>
                        <li>
                            Select the item's parent in the tree
                        </li>
                        <li>
                            Select the new item button
                        </li>
                    </ol>
                    <p>
                        For example: creating a new album
                    </p>
                    <ol>
                        <li>
                            Select the project in the tree
                        </li>
                        <li>
                            Select <button class="btn btn-primary dashboard-button">New Album</button>
                        </li>
                    </ol>
                    <p>
                        To edit an item
                    </p>
                    <ol>
                        <li>
                            Select the item in the tree
                        </li>
                        <li>
                            Select the edit item button
                        </li>
                    </ol>
                    <p>
                        For example: editing a tab
                    </p>
                    <ol>
                        <li>
                            Select the tab in the tree
                        </li>
                        <li>
                            Select <button class="btn btn-primary dashboard-button">Edit Tab</button>
                        </li>
                    </ol>
                </div>
                <div id="page-6" style="display: none;">
                    <h6 style='text-decoration: underline'>Accessing Tab Versions</h6>
                    <p>
                        Tab versions will load when you select a tab in the tree:
                    <p>
                        <div style="display: flex; justify-content: center">
                            <img src="~/images/tabversion-table.png" style="width: 100%;" />
                        </div>
                    </p>
                    <p>
                        In the tab version table you will see up to four icons:
                    </p>
                    <div class="row">
                        <div class="col-6">
                            <div class="tutorial-icon" style="display: flex; justify-content: center">
                                <i class="fa fa-pencil fa-lg"></i>
                            </div>
                            <p>
                                The edit button is available for the project owner and the user that uploaded the tab version. Other users will not see this button.
                            </p>
                        </div>
                        <div class="col-6">
                            <div class="tutorial-icon" style="display: flex; justify-content: center">
                                <i class="fa fa-download fa-lg"></i>
                            </div>
                            <p>
                                The download button is available for all users.
                            </p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="tutorial-icon" style="display: flex; justify-content: center">
                                <i class="fa fa-play fa-lg"><sub style="font-family: 'Open Sans', sans-serif !important; font-size: small;"> beta</sub></i>
                            </div>
                            <p>
                                The play button is available for all users for tabs that are Guitar Pro format versions 3 through 6 (.gp3, .gp4, .gp5, .gpx).
                            </p>
                        </div>
                        <div class="col-6">
                            <div class="tutorial-icon" style="display: flex; justify-content: center">
                                <i class="fa fa-times fa-lg"></i>
                            </div>
                            <p>
                                The delete button is available for the project owner and the user that uploaded the tab version. Other users will not see this button.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="display: flex; justify-content: space-between">
                <div>
                    <button type="button" class="btn btn-default" id="btn-prev">Prev</button>
                    <button type="button" class="btn btn-default" id="btn-next">Next</button>
                </div>
                <div>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="tutorial-mobile-modal" class="modal fade">
    <div class="modal-dialog text-left">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tabs Page Tutorial (Mobile)</h4>
                <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="page-1-mobile">
                    Welcome to the Tabs page on mobile! This is where you will probably spend most of your time on TabCollab. From here, you can:
                    <p>
                        <ul>
                            <li>Create tabs</li>
                            <li>Add/edit/delete tab versions</li>
                            <li>Download and play your tab versions</li>
                        </ul>
                    </p>
                    The next few pages are a brief tutorial to help you get going. You can always re-open the tutorial from the top of this page.
                </div>
                <div id="page-2-mobile" style="display: none;">
                    <h6 style='text-decoration: underline'>Accessing Tabs</h6>
                    <p>
                        The mobile Tab page is organized by
                        <ul>
                            <li>Projects</li>
                            <li>Albums</li>
                            <li>Tabs</li>
                            <li>Tab Versions</li>
                        </ul>
                    </p>
                    <p>
                        You expand Projects to access Albums, expand Albums to access Tabs, expand Tabs to access Tab Versions.
                    </p>
                </div>
                <div id="page-3-mobile" style="display: none;">
                    <h6 style='text-decoration: underline'>Creating Tabs and Tab Versions</h6>
                    <p>
                        Create new Tabs via <i class="fa fa-plus fa-3x"></i>
                    </p>
                    <p>
                        You have to have at least one Project with one Album to create a new Tab or Tab Version.
                    </p>
                    <p>
                        You will be prompted to select the Project and then the Album for your new Tab or Tab Version.
                    </p>
                    <p>
                        You can create a new Tab via <i class="fa fa-plus fa-3x"></i> at the top of the Tab list, or create a new Tab Version by selecting a Tab.
                    </p>
                    <div style="display: flex; justify-content: center">
                        <img src="~/images/tab-selection-mobile.png" />
                    </div>
                </div>               
            </div>
            <div class="modal-footer" style="display: flex; justify-content: space-between">
                <div>
                    <button type="button" class="btn btn-default" id="btn-prev-mobile">Prev</button>
                    <button type="button" class="btn btn-default" id="btn-next-mobile">Next</button>
                </div>
                <div>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="subscription-limit-modal" class="modal fade">
    <div class="modal-dialog text-left">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tab Version Limit Reached</h4>
                <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Your TabCollab subscription has expired. You can continue to contribute to the projects of other musicians and view/edit your existing tabs.<br /><br />To renew your subscription, go the the Account page.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="tab-limit-modal" class="modal fade">
    <div class="modal-dialog text-left">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tab Limit Reached</h4>
                <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                You have met the 5 allowed free tabs that are included with the free TabCollab account. You can continue to contribute to the projects of other musicians and view/edit your existing tabs.<br /><br />To upgrade your account to have UNLIMITED tabs, go the the Account page.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="tab-version-limit-modal" class="modal fade">
    <div class="modal-dialog text-left">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Tab Version Limit Reached</h4>
                <button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                You have met the 15 allowed free tab versions that are included with the free TabCollab account. You can continue to contribute to the projects of other musicians and view/edit your existing tabs.<br /><br />To upgrade your account to have UNLIMITED tab versions, go the the Account page.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="dashboard-container">
    <div id="dashboard">
        <div class="buttons-container" style="display: none; justify-content: space-between">
            <div>
                <div id="project-button-container" class="btn-group">
                    <button id="new-project-button" class="btn btn-primary dashboard-button">New Project</button>
                </div>
                <div id="album-button-container" class="btn-group">
                    <button class="btn btn-primary dashboard-button" disabled>New Album</button>
                </div>
            </div>
            <div>
                <button id="btn-tutorial" class="btn btn-info dashboard-button">Show Tutorial</button>
            </div>
            <div>
                <div id="new-tabversion-button-container" class="pull-right btn-group">
                    <button class="btn btn-primary dashboard-button" disabled>New Tab Version</button>
                </div>
                <div id="tab-button-container" class="pull-right btn-group">
                    <button class="btn btn-primary dashboard-button" disabled>New Tab</button>
                </div>
            </div>
        </div>
        <div id="tree-table-container" style="display: none;">
            <div class="tree-wrapper-container">
                <div class="tab">
                    <button id="my-projects" class="btn btn-tab tablinks active">My Projects</button>
                    <button id="contributor-projects" class="btn btn-tab tablinks">Their Projects</button>
                </div>
                <div class="tree-wrapper-my-projects">
                    <div class="jstree owner-tree" jstree-type="owner">
                        @foreach (var project in Model.ProjectIndexViewModels)
                        {
                            @if (project.IsOwner)
                            {
                                <ul>
                                    <li id="project-@project.Id" jstree-type="owner" data-jstree='{"icon":"project-@project.Id-image"}' href="@Url.Action("Delete", "Projects", new { id = project.Id })">
                                        @project.Name
                                        @foreach (var album in project.Albums)
                                        {
                                            <ul>
                                                <li id="album-@album.Id" jstree-type="owner" data-jstree='{"icon":"album-@album.Id-image"}' href="@Url.Action("Delete", "Albums", new { id = album.Id })">
                                                    @album.Name
                                                    @foreach (var tab in album.Tabs)
                                                    {
                                                        <ul>
                                                            <li id="tab-@tab.Id" jstree-type="owner" data-jstree='{"icon":"/images/eighthnote(16x23).png"}' href="@Url.Action("Delete", "Tabs", new { id = tab.Id })">@tab.Name</li>
                                                        </ul>
                                                    }
                                                </li>
                                            </ul>
                                        }
                                    </li>
                                </ul>
                            }
                        }
                    </div>
                </div>
                <div class="tree-wrapper-their-projects" style="display: none;">
                    <div class="jstree contributor-tree" jstree-type="contributor">
                        @foreach (var project in Model.ProjectIndexViewModels)
                        {
                            @if (!project.IsOwner)
                            {
                                <ul>
                                    <li id="project-@project.Id" data-jstree='{"icon":"project-@project.Id-image"}' jstree-type="contributor">
                                        @project.Name
                                        @foreach (var album in project.Albums)
                                        {
                                            <ul>
                                                <li id="album-@album.Id" jstree-type="contributor" data-jstree='{"icon":"album-@album.Id-image"}'>
                                                    @album.Name
                                                    @foreach (var tab in album.Tabs)
                                                    {
                                                        <ul>
                                                            <li id="tab-@tab.Id" jstree-type="contributor" data-jstree='{"icon":"/images/eighthnote(16x23).png"}'>@tab.Name</li>
                                                        </ul>
                                                    }
                                                </li>
                                            </ul>
                                        }
                                    </li>
                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
            <div id="splitter"></div>
            <div id="tabversions-table-container">
                <div class="tab-loader-container" style="display: none;">
                    <div class="tab-loader"></div>
                </div>
                <table class="table table-striped table-dark table-hover tabversions-table">
                    <thead>
                        <tr>
                            <th class="user-image-col" width="5%"></th>
                            <th class="lg-device-col" width="30%"><div class="table-header">Description</div></th>
                            <th class="lg-device-col" width="15%"><div class="table-header">Contributor</div></th>
                            <th class="lg-device-col" width="20%"><div class="table-header">Date Added</div></th>
                            <th width="10%"><div class="table-header version-header">Ver</div></th>
                            <th width="20%"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr></tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="flex-container-col list-loader-wrapper">
            <div class="list-loader"></div>
        </div>
        <div class="projects-container row list-row" style="display: none;">
            <div class="mobile-button-container" style="display: flex; justify-content: space-between; margin-top: 5px;">
                <div>
                    <a id="new-tab-mobile-button" class="white-icon add-button" href="@Url.Action("GetProjectSelectionPartialView", "Projects")"><i data-toggle="tooltip" title="Add New Tab" class="fa fa-plus fa-3x"></i></a>
                </div>
                <div>
                    <button id="btn-tutorial-mobile" class="btn btn-info dashboard-button" style="margin-top: 7px;">Show Tutorial</button>
                </div>                                
            </div>
        </div>
        <div id='tab-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetTabFormPartialView", "Tabs")'>
            <div id='tab-form-container'>
            </div>
        </div>

        <div id='project-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetProjectFormPartialView", "Projects")'>
            <div id='project-form-container'>
            </div>
        </div>

        <div id='album-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetAlbumFormPartialView", "Albums")'>
            <div id='album-form-container'>
            </div>
        </div>

        <div id='tabversion-form-modal' class='modal fade' align="center" data-url='@Url.Action("GetTabVersionFormPartialView", "TabVersions")'>
            <div id='tabversion-form-container'>
            </div>
        </div>

        <div id='tab-mobile-form-modal' class='modal fade' align="center">
            <div id='tab-mobile-form-container'>
            </div>
        </div>
    </div>
</div>

@section scripts
    {
    <script src="~/js/jstree.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/jquery-resizable/dist/jquery-resizable.min.js"></script>

    <script>
        var original_parent;

        $(document).ready(function () {           
            var True = true,
                False = false,
                allowNewTabs = @Model.AllowNewTabs,
                allowNewTabVersions = @Model.AllowNewTabVersions,
                tabTutorialShown = @Model.TabTutorialShown,
                tabTutorialMobileShown = @Model.TabTutorialMobileShown,
                tabLoader = "<div class='tab-loader-container' style='display: none;'><div class='tab-loader'></div></div>",
                currentPage = 1;   

            // Only show tooltips on non-touchscreens
            if (!('ontouchstart' in window)) {
                $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
            }

            if (!allowNewTabs) {
                $('#tab-limit-modal').modal('show');
            }
            else if (!allowNewTabVersions) {
                $('#tab-version-limit-modal').modal('show');
            }

            $('footer').show();

            repopulateTabList();

            onResize(true);

//
// Tutorials
//
            if ($(window).width() > 600 && !tabTutorialShown) {
                $('#tutorial-modal').modal('show');

                var url = '@Url.Action("TabTutorialShown", "Tabs")';

                $.ajax({
                    url: url,
                    type: 'POST',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("updating tab tutorial status", response.error);
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("updating tab tutorial status", error.statusText);
                })
            }
            else if ($(window).width() <= 600 && !tabTutorialMobileShown) {
                $('#tutorial-mobile-modal').modal('show');

                var url = '@Url.Action("TabTutorialMobileShown", "Tabs")';

                $.ajax({
                    url: url,
                    type: 'POST',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("updating tab tutorial mobile status", response.error);
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("updating tab tutorial mobile status", error.statusText);
                })
            }

            $('#btn-next').on('click', function () {
                if ($('#page-1').is(':visible')) {
                    $('#page-1').hide();
                    $('#page-2').show();
                }
                else if ($('#page-2').is(':visible')) {
                    $('#page-2').hide();
                    $('#page-3').show();
                }
                else if ($('#page-3').is(':visible')) {
                    $('#page-3').hide();
                    $('#page-4').show();
                }
                else if ($('#page-4').is(':visible')) {
                    $('#page-4').hide();
                    $('#page-5').show();
                }
                else if ($('#page-5').is(':visible')) {
                    $('#page-5').hide();
                    $('#page-6').show();
                    $('#tutorial-modal').find('.modal-dialog').css('max-width', '700px');
                }
                else if ($('#page-6').is(':visible')) {
                    $('#page-6').hide();
                    $('#page-1').show();
                    $('#tutorial-modal').find('.modal-dialog').css('max-width', '500px');
                }
            });

            $('#btn-prev').on('click', function () {
                if ($('#page-1').is(':visible')) {
                    $('#page-1').hide();
                    $('#page-6').show();
                    $('#tutorial-modal').find('.modal-dialog').css('max-width', '700px');
                }
                else if ($('#page-2').is(':visible')) {
                    $('#page-2').hide();
                    $('#page-1').show();
                }
                else if ($('#page-3').is(':visible')) {
                    $('#page-3').hide();
                    $('#page-2').show();
                }
                else if ($('#page-4').is(':visible')) {
                    $('#page-4').hide();
                    $('#page-3').show();
                }
                else if ($('#page-5').is(':visible')) {
                    $('#page-5').hide();
                    $('#page-4').show();
                }
                else if ($('#page-6').is(':visible')) {
                    $('#page-6').hide();
                    $('#page-5').show();
                    $('#tutorial-modal').find('.modal-dialog').css('max-width', '500px');
                }
            });

            $('#btn-next-mobile').on('click', function () {
                if ($('#page-1-mobile').is(':visible')) {
                    $('#page-1-mobile').hide();
                    $('#page-2-mobile').show();
                }
                else if ($('#page-2-mobile').is(':visible')) {
                    $('#page-2-mobile').hide();
                    $('#page-3-mobile').show();
                }
                else if ($('#page-3-mobile').is(':visible')) {
                    $('#page-3-mobile').hide();
                    $('#page-1-mobile').show();
                }
            });

            $('#btn-prev-mobile').on('click', function () {
                if ($('#page-1-mobile').is(':visible')) {
                    $('#page-1-mobile').hide();
                    $('#page-3-mobile').show();
                    $('#tutorial-modal').find('.modal-dialog').css('max-width', '700px');
                }
                else if ($('#page-2-mobile').is(':visible')) {
                    $('#page-2-mobile').hide();
                    $('#page-1-mobile').show();
                }
                else if ($('#page-3-mobile').is(':visible')) {
                    $('#page-3-mobile').hide();
                    $('#page-2-mobile').show();
                }
            });

            $('#btn-tutorial').on('click', function () {
                $('#tutorial-modal').modal('show');
            });

            $('#btn-tutorial-mobile').on('click', function () {
                $('#tutorial-mobile-modal').modal('show');
            });
//
// End Tutorials
//

//
// JSTree Methods
//
            $(function () {
                $(".jstree").jstree({
                    "core": {
                        "check_callback": function (operation, node, node_parent, node_position, more) {
                            if (operation == 'move_node') {
                                if (node_parent.id == '#') {
                                    return false;
                                }
                                // Don't allow nodes to be moved between trees
                                else if ((node.li_attr['jstree-type'].includes('owner') && node_parent.li_attr['jstree-type'].includes('contributor')) || (node.li_attr['jstree-type'].includes('contributor') && node_parent.li_attr['jstree-type'].includes('owner'))) {
                                    return false;
                                }
                                else {
                                    // Only allow albums to be moved beneath projects
                                    if (node.id.includes('album') && !node_parent.id.includes('project')) {
                                        return false;
                                    }
                                    // Only allow tabs to be moved beneath albums
                                    else if (node.id.includes('tab') && !node_parent.id.includes('album')) {
                                        return false;
                                    }
                                }
                                return true;
                            }
                        }
                    },
                    "dnd": {
                        "is_draggable": function (node) {
                            // Don't allow users to move projects or any node in the contributor tree
                            if (node[0].id.includes('project') || node[0].li_attr['jstree-type'].includes('contributor')) {
                                return false;
                            }
                            else {
                                var ownerTree = $('.owner-tree').jstree(true);
                                original_parent = ownerTree.get_node(node[0].parent);
                                return true;
                            }
                        }
                    },
                    "contextmenu": {
                        items: customMenu
                    },
                    "plugins": ["dnd", "contextmenu"]
                });
            })

            function customMenu(node) {
                var thatNode = node;
                // The default set of all items
                var items = {
                    deleteItem: { // The "delete" menu item
                        label: "Delete",
                        action: function () {
                            var nodeType = thatNode.id.substr(0, thatNode.id.indexOf('-'));
                            var href = thatNode.li_attr.href;
                            bootbox.prompt("Confirm Delete", function (result) {
                                if (result == thatNode.text.trim()) {
                                    $.ajax({
                                        type: 'DELETE',
                                        dataType: 'json',
                                        traditional: 'true',
                                        url: href
                                    })
                                    .then(function (response) {
                                        if (response.error) {
                                            showFailureBootbox("deleting", response.error);
                                        }
                                        else {
                                            // Delete the node from the tree
                                            $('.owner-tree').jstree(true).delete_node(thatNode);

                                            // Get an empty tab version table
                                            var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                                            $.ajax({
                                                url: url,
                                                type: 'GET',
                                            })
                                            .then(function (response) {
                                                if (response.error) {
                                                    showFailureBootbox("deleting", response.error);
                                                }
                                                else {
                                                    $('#tabversions-table-container').empty().append(response);
                                                    onResize(false);
                                                }
                                            })
                                            .fail(function (error) {
                                                showFailureBootbox("deleting", error.statusText);
                                            });
                                        }
                                    })
                                    .fail(function (error) {
                                        showFailureBootbox("deleting", error.statusText);
                                    })
                                }
                                else if (result != null) {
                                    bootbox.alert("Name did not match.");

                                }
                            })

                            // CSS change to make the title display properly and add prompt text
                            $('.modal-header').css('display', 'unset')
                            $('.bootbox-body').prepend("<p>Are you sure you wish to delete this " + nodeType + "? This cannot be undone.<br />Confirm by typing the " + nodeType + "'s name below:</p>")
                         }
                    }
                };

                // Don't allow contributor nodes to be deleted
                if (node.li_attr['jstree-type'].includes('contributor')) {
                    delete items.deleteItem;
                }

                return items;
            }

            // Event that fires when user drops a jstree node after dragging
            $(document).on('dnd_stop.vakata', function (e, data) {
                var ownerTree = $('.owner-tree').jstree(true);
                var node = ownerTree.get_node(data.data.nodes[0]);
                var node_parent = ownerTree.get_node(node.parent);

                if (node_parent.id == '#') {
                    return false;
                }
                // Don't allow nodes to be moved between trees
                else if ((node.li_attr['jstree-type'].includes('owner') && node_parent.li_attr['jstree-type'].includes('contributor')) || (node.li_attr['jstree-type'].includes('contributor') && node_parent.li_attr['jstree-type'].includes('owner'))) {
                    return false;
                }
                else {
                    // Only allow albums to be moved beneath projects
                    if (node.id.includes('album') && !node_parent.id.includes('project')) {
                        return false;
                    }
                    // Only allow tabs to be moved beneath albums
                    else if (node.id.includes('tab') && !node_parent.id.includes('album')) {
                        return false;
                    }
                }

                if (node.id.includes('tab')) {
                    var orderArray = node_parent.children.map(function (c) { return c.substring(4) });

                    var data = { tabId: node.id.substring(4), albumId: node_parent.id.substring(6) };

                    $.ajax({
                        data: data,
                        type: 'POST',
                        dataType: 'json',
                        traditional: 'true',
                        url: '@Url.Action("MoveTab", "Tabs")'
                    })
                    .then(function (response) {
                        // Reorder tabs in under destination album
                        data = { tabIds: orderArray };

                        $.ajax({
                            data: data,
                            type: 'POST',
                            dataType: 'json',
                            traditional: 'true',
                            url: '@Url.Action("ReorderTabs", "Tabs")'
                        })
                    })
                    .then(function (response) {
                        // Reorder tabs in under previous album function (c) { return c.substring(4) }
                        orderArray = original_parent.children.map(function (c) { return c.substring(4) });

                        data = { tabIds: orderArray };

                        $.ajax({
                            data: data,
                            type: 'POST',
                            dataType: 'json',
                            traditional: 'true',
                            url: '@Url.Action("ReorderTabs", "Tabs")'
                        })
                    })
                    .fail(function (error) {
                        showFailureBootbox("moving tab", error.statusText);
                    });
                }
                else if (node.id.includes('album')) {
                    var orderArray = node_parent.children.map(function (c) { return c.substring(6) });

                    var data = { albumId: node.id.substring(6), projectId: node_parent.id.substring(8) };

                    $.ajax({
                        data: data,
                        type: 'POST',
                        dataType: 'json',
                        traditional: 'true',
                        url: '@Url.Action("MoveAlbum", "Albums")'
                    })
                    .then(function (response) {
                        // Reorder albums in under destination project
                        data = { albumIds: orderArray };

                        $.ajax({
                            data: data,
                            type: 'POST',
                            dataType: 'json',
                            traditional: 'true',
                            url: '@Url.Action("ReorderAlbums", "Albums")'
                        })
                    })
                    .then(function (response) {
                        // Reorder albums in under previous project
                        orderArray = original_parent.children.map(function (c) { return c.substring(6) });

                        data = { albumIds: orderArray };

                        $.ajax({
                            data: data,
                            type: 'POST',
                            dataType: 'json',
                            traditional: 'true',
                            url: '@Url.Action("ReorderAlbums", "Albums")'
                        })
                    })
                    .fail(function (error) {
                        showFailureBootbox("moving album", error.statusText);
                    });
                }
            });

            // Horizontal resizing of treeviews and table
            $(".tree-wrapper-container").resizable({
                handleSelector: "#splitter",
                resizeHeight: false,
                onDrag: function (e, $el, newWidth, newHeight, opt) {
                    if ($(document).width() < 650) {
                        // limit box size
                        if (newWidth > 200) {
                            newWidth = 200;
                        }
                    }
                    else {
                        // limit box size
                        if (newWidth > 500) {
                            newWidth = 500;
                        }
                    }

                    $el.width(newWidth);

                    // Call onResize to resize the user images
                    onResize(false);

                    // explicitly return **false** if you don't want
                    // auto-height computation to occur
                    return false;
                }
            });

        var currentModal, selectedTree;

        // Selecting a node
        // When a node is selected determine if it is a tab or project and display the corresponding table
        // Tab: Tab versions table, Project: Empty table
        $(".jstree").on("select_node.jstree", function (e, data) {
            if ($(this).hasClass('owner-tree')) {
                $('.contributor-tree').jstree("deselect_all");
            }
            else {
                $('.owner-tree').jstree("deselect_all");
            }

            selectedTree = $(this);

            // This syntax is needed to get nodeId in "tab 1" format instead of ["tab 1"] format
            var nodeId = $(this).jstree().get_selected(true)[0].id;

            if (nodeId.substring(0, 3) == 'tab') {
                $('.tabversions-table').hide();
                $('.tab-loader-container').show();
                nodeId = nodeId.substring(4);
                parentNodeId = data.instance.get_node(data.node.parent).id.substring(6);

                var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions")?id=' + nodeId;

                $.ajax({
                    url: url,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("retrieving tab versions", response.error);
                    }
                    else {
                        $('#tabversions-table-container').empty().append(tabLoader + response);
                        if (!('ontouchstart' in window)) {
                            $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
                        }
                        // Call onResize to resize the user images
                        onResize(false);
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("retrieving tab versions", error.statusText);
                });

                $('#project-button-container').empty().append('<button id="new-project-button" class="btn btn-primary dashboard-button">New Project</button>');
                $('#album-button-container').empty().append('<button class="btn btn-primary dashboard-button" disabled>New Album</button>');

                // Only allow edit if we're the owner
                if ($(selectedTree)[0].className.includes('owner-tree')) {
                    $('#tab-button-container').empty().append('<button id="edit-tab-button" class="btn btn-primary dashboard-button" data-url="/Tabs/GetTabFormPartialView/?albumId=' + parentNodeId + '&tabId=' + nodeId + '">Edit Tab</button>');
                }
                else {
                    $('#tab-button-container').empty().append('<button id="new-tab-button" class="btn btn-primary dashboard-button" disabled>New Tab</button>');
                }

                if ($(selectedTree)[0].className.includes('owner-tree') && !allowNewTabVersions) {
                    $('#new-tabversion-button-container').empty().append('<button id="new-tab-version-button" class="btn btn-primary dashboard-button" disabled>New Tab Version</button>');
                }
                else {
                    var actionLink = '@Html.ActionLink("New Tab Version", "New", "TabVersions", new { id = -1 }, new { @class = "btn btn-primary dashboard-button", id = "new-tabversion-button" })'
                    actionLink = actionLink.replace('-1', nodeId);
                    $('#new-tabversion-button-container').empty().append(actionLink);
                }
            }
            else if (nodeId.substring(0, 5) == 'album') {
                nodeId = nodeId.substring(6);
                parentNodeId = data.instance.get_node(data.node.parent).id.substring(8);
                var actionLink = '@Html.ActionLink("New Tab", "New", "Tabs", new { id = -1 }, new { @class = "btn btn-primary dashboard-button", id = "new-tab-button" })'
                actionLink = actionLink.replace('-1', nodeId);
                $('#project-button-container').empty().append('<button id="new-project-button" class="btn btn-primary dashboard-button">New Project</button>');
                $('#new-tabversion-button-container').empty().append('<button class="btn btn-primary dashboard-button" disabled>New Tab Version</button>');

                if ($(selectedTree)[0].className.includes('owner-tree') && (!allowNewTabs || !allowNewTabVersions)) {
                    $('#tab-button-container').empty().append('<button id="new-tab-button" class="btn btn-primary dashboard-button" disabled>New Tab</button>');
                }
                else {
                    $('#tab-button-container').empty().append(actionLink);
                }

                // Only allow edit if we're the owner
                if ($(selectedTree)[0].className.includes('owner-tree')) {
                    $('#album-button-container').empty().append('<button id="edit-album-button" class="btn btn-primary dashboard-button" data-url="/Albums/GetAlbumFormPartialView/?projectId=' + parentNodeId + '&albumId=' + nodeId + '">Edit Album</button>');
                }
                else {
                    $('#album-button-container').empty().append('<button id="edit-album-button" class="btn btn-primary dashboard-button" disabled>New Album</button>');
                }

                var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                $.ajax({
                    url: url,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("retrieving tab versions", response.error);
                    }
                    else {
                        $('#tabversions-table-container').empty().append(tabLoader + response);
                        onResize(false);
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("retrieving tab versions", error.statusText);
                });
            }
            else if (nodeId.substring(0, 7) == 'project') {
                nodeId = nodeId.substring(8);
                var actionLink = '@Html.ActionLink("New Album", "New", "Albums", new { id = -1 }, new { @class = "btn btn-primary dashboard-button", id = "new-album-button" })'
                actionLink = actionLink.replace('-1', nodeId);
                $('#album-button-container').empty().append(actionLink);
                $('#tab-button-container').empty().append('<button class="btn btn-primary dashboard-button" disabled>New Tab</button>');
                $('#new-tabversion-button-container').empty().append('<button class="btn btn-primary dashboard-button" disabled>New Tab Version</button>');

                // Only allow edit if we're the owner
                if ($(selectedTree)[0].className.includes('owner-tree')) {
                    $('#project-button-container').empty().append('<button id="edit-project-button" class="btn btn-primary dashboard-button" data-url="/Projects/GetProjectFormPartialView/' + nodeId + '">Edit Project</button>');
                }
                else {
                    $('#project-button-container').empty().append('<button id="new-project-button" class="btn btn-primary dashboard-button">New Project</button>');
                }

                var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                $.ajax({
                    url: url,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("retrieving tab versions", response.error);
                    }
                    else {
                        $('#tabversions-table-container').empty().append(tabLoader + response);
                        onResize(false);
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("retrieving tab versions", error.statusText);
                });
            }
        });
//
// End JSTree Methods
//


// 
// Click Events
//
        // Deleting a tab version
        $("#dashboard").on("click", "#delete-tabversion-button", function (e, data) {
            e.preventDefault();
            var href = this.href;
            var tabVersionId = $(this).attr('data-tabversion-id');

            bootbox.confirm("Are you sure you wish to delete this tab version? This cannot be undone.", function (result) {
                if (result) {
                    $.ajax({
                        url: href,
                        type: 'DELETE',
                    })
                    .then(function (response) {
                        if (response.error) {
                            showFailureBootbox("deleting tab version", response.error);
                        }
                        else {
                            if ($('#tree-table-container').is(':visible')) {
                                var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
                                // Update tab versions table
                                if (nodeId.substring(0, 3) == 'tab') {
                                    nodeId = nodeId.substring(4);

                                    //var $tabversions-table-container = $('#tabversions-table-container'),
                                    var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions")?id=' + nodeId;

                                    $.ajax({
                                        url: url,
                                        type: 'GET',
                                    })
                                    .then(function (response) {
                                        if (response.error) {
                                            showFailureBootbox("retrieving tab versions", response.error);
                                        }
                                        else {
                                            $('#tabversions-table-container').empty().append(response);
                                            if (!('ontouchstart' in window)) {
                                                $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
                                            }
                                            // Call onResize to resize the user images
                                            onResize(false);
                                        }
                                    })
                                    .fail(function (error) {
                                        showFailureBootbox("retrieving tab versions", error.statusText);
                                    });
                                }
                                else if (nodeId.substring(0, 7) == 'project') {
                                    nodeId = nodeId.substring(8);
                                    var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                                    $.ajax({
                                        url: url,
                                        type: 'GET',
                                    })
                                    .then(function (response) {
                                        if (response.error) {
                                            showFailureBootbox("retrieving tab versions", response.error);
                                        }
                                        else {
                                            $('#tabversions-table-container').empty().append(response);

                                            // Call onResize to resize the user images
                                            onResize(false);
                                        }
                                    })
                                    .fail(function (error) {
                                        showFailureBootbox("retrieving tab versions", error.statusText);
                                    });
                                }
                            }
                            else {
                                // Remove the deleted version
                                $("#tabversion-" + tabVersionId).remove();
                            }
                        }
                    })
                    .fail(function (error) {
                        showFailureBootbox("deleting tab version", error.statusText);
                    });
                }
            })
        });

        // Show modal for new tab
        $("#dashboard").on("click", "#new-tab-button", function (e, data) {
            e.preventDefault();

            var url = $('#tab-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 5) == 'album') {
                nodeId = nodeId.substring(6);

                url = url + "?albumId=" + nodeId;

                showFileUploadModal(url, 'tab-form');
            }
        });

        // Show modal for edit tab
        $("#dashboard").on("click", "#edit-tab-button", function (e, data) {
            e.preventDefault();

            var url = $(this).data('url');

            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing tab form", response.error);
                }
                else {
                    $('#tab-form-container').html(response);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tab-form"));

                    currentModal = $('#tab-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing tab form", error.statusText);
            });
        });

        // Show modal for new project
        $("#dashboard").on("click", "#new-project-button", function (e, data) {
            e.preventDefault();

            var url = $('#project-form-modal').data('url');

            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing project form", response.error);
                }
                else {
                    $('#project-form-container').html(response);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#project-form"));

                    imageUpload();

                    currentModal = $('#project-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing project form", error.statusText);
            });
        });

        // Show modal for edit project
        $("#dashboard").on("click", "#edit-project-button", function (e, data) {
            e.preventDefault();

            var url = $(this).data('url');

            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing project form", response.error);
                }
                else {
                    $('#project-form-container').html(response);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#project-form"));

                    imageUpload();

                    currentModal = $('#project-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing project form", error.statusText);
            });
        });

        // Show modal for new album
        $("#dashboard").on("click", "#new-album-button", function (e, data) {
            e.preventDefault();

            var url = $('#album-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 7) == 'project') {
                nodeId = nodeId.substring(8);

                url = url + "?projectId=" + nodeId;

                $.ajax({
                    url: url,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("showing album form", response.error);
                    }
                    else {
                        $('#album-form-container').html(response);

                        // Client side validation for dynamic modal injection
                        $.validator.unobtrusive.parse($("#album-form"));

                        imageUpload();

                        currentModal = $('#album-form-modal');
                        currentModal.modal('show');
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("showing album form", error.statusText);
                });
            }
        });

        // Show modal for edit album
        $("#dashboard").on("click", "#edit-album-button", function (e, data) {
            e.preventDefault();

            var url = $(this).data('url');

            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing album form", response.error);
                }
                else {
                    $('#album-form-container').html(response);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#album-form"));

                    imageUpload();

                    currentModal = $('#album-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing album form", error.statusText);
            });
        });

        // Show modal for new tab version
        $("#dashboard").on("click", "#new-tabversion-button", function (e, data) {
            e.preventDefault();

            var url = $('#tabversion-form-modal').data('url');

            var nodeId = $(selectedTree).jstree().get_selected(true)[0].id;
            if (nodeId.substring(0, 3) == 'tab') {
                nodeId = nodeId.substring(4);

                url = url + "?tabId=" + nodeId;

                $.get("@Url.Action("CheckLatestTabVersion", "TabVersions")" + "?tabId=" + nodeId, function (result) {
                    if (!result.hasLatest) {
                        bootbox.confirm("You have not yet downloaded the latest version for this tab. Make sure to download latest to prevent overwriting previous changes.<br /><br /> Do you wish to proceed?", function (result) {
                            if (result) {
                                showFileUploadModal(url, 'tabversion-form');
                            }
                        });
                    }
                    else {
                        showFileUploadModal(url, 'tabversion-form');
                    }
                })
            }
        });

        // Show modal for new tab on mobile
        $("#dashboard").on("click", "#new-tab-mobile-button", function (e, data) {
            e.preventDefault();

            var href = this.href;

            $.ajax({
                url: href,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing project selection", response.error);
                }
                else {
                    $('#tab-mobile-form-container').html(response);

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tab-mobile-form"));

                    currentModal = $('#tab-mobile-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing project selection", error.statusText);
            })
        });

        $(document).on("click", ".project-selection-panel", function (e, data) {
            e.preventDefault();

            var that = this;

            // Give modal time to close
            setTimeout(function () {
                var href = "@Url.Action("GetAlbumSelectionPartialView", "Albums")" + "/?projectId=" + $(that).attr("data-project-id");

                $.ajax({
                    url: href,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("showing album selection", response.error);
                    }
                    else {
                        $('#tab-mobile-form-container').html(response);
                        // Client side validation for dynamic modal injection
                        $.validator.unobtrusive.parse($("#tab-mobile-form"));

                        currentModal = $('#tab-mobile-form-modal');
                        currentModal.modal('show');
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("showing album selection", error.statusText);
                })
            }, 500)
        });

        $(document).on("click", ".album-selection-panel", function (e, data) {
            e.preventDefault();

            var that = this;

            // Give modal time to close
            setTimeout(function () {
                var href = "@Url.Action("GetTabSelectionPartialView", "Tabs")" + "/?albumId=" + $(that).attr("data-album-id");

                $.ajax({
                    url: href,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("showing tab selection", response.error);
                    }
                    else {
                        $('#tab-mobile-form-container').html(response);
                        // Client side validation for dynamic modal injection
                        $.validator.unobtrusive.parse($("#tab-mobile-form"));

                        if (!('ontouchstart' in window)) {
                            $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
                        }

                        currentModal = $('#tab-mobile-form-modal');
                        currentModal.modal('show');
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("showing tab selection", error.statusText);
                })
            }, 500)
        });

        $(document).on("click", ".tab-selection-panel", function (e, data) {
            e.preventDefault();

            var that = this;

            // Give modal time to close
            setTimeout(function () {
                var href = "@Url.Action("GetTabVersionFormPartialView", "TabVersions")" + "/?tabId=" + $(that).attr("data-tab-id");

                $.ajax({
                    url: href,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("showing tab version form", response.error);
                    }
                    else {
                        $('#tab-mobile-form-container').html(response);
                        // Client side validation for dynamic modal injection
                        $.validator.unobtrusive.parse($("#tab-mobile-form"));

                        currentModal = $('#tab-mobile-form-modal');
                        currentModal.modal('show');
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("showing tab version selection", error.statusText);
                })
            }, 500)
        });

        $(document).on("click", "#new-tab-mobile-modal-button", function (e, data) {
            e.preventDefault();

            var that = this;

            // Give modal time to close
            setTimeout(function () {
                var href = "@Url.Action("GetTabFormPartialView", "Tabs")" + "/?albumId=" + $(that).attr("data-album-id");

                $.ajax({
                    url: href,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("showing tab version form", response.error);
                    }
                    else {
                        $('#tab-mobile-form-container').html(response);
                        // Client side validation for dynamic modal injection
                        $.validator.unobtrusive.parse($("#tab-mobile-form"));

                        currentModal = $('#tab-mobile-form-modal');
                        currentModal.modal('show');
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("showing tab version selection", error.statusText);
                })
            }, 500)
        });

        // Show modal for edit album
        $("#dashboard").on("click", "#edit-tabversion-button", function (e, data) {
            e.preventDefault();

            var href = this.href + "?tabId=" + $(this).attr("data-tab-id") + "&tabVersionId=" + $(this).attr("data-tabversion-id");

            $.ajax({
                url: href,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing tab version form", response.error);
                }
                else {
                    $('#tabversion-form-container').html(response);
                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($("#tabversion-form"));

                    currentModal = $('#tabversion-form-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing tab version form", error.statusText);
            })
        });

        $(document).on("change", "#contributors-list", function (e, data) {
            e.preventDefault();

            var selected = $(this).find('option:selected'),
                contributorCount = getContributorCount(),
                username = $(this).val(),
                name = selected.text();

            // Create button for contributor and remove from list
            $("#contributors-panels").append("<input type='hidden' class='form-control contributor' name='' value='" + username + "'>");
            $("#contributors-panels").append("<div data-username='" + username + "' data-text='" + name + "' class='contributor-btn btn btn-default'><div class='contributor-text'>" + name + "</div><i class='fa fa-times contributor-x' /></div>");
            selected.remove();
            $("#contributors-list option[value=default]").prop("selected", true);
        });

        $(document).on("click", ".contributor-btn", function (e, data) {
            e.preventDefault();

            var username = $(this).attr("data-username"),
                text = $(this).attr("data-text");

            // Add contributor back to dropdown list and remove the button
            $("#contributors-list").append("<option value='" + username + "'>" + text + "</option>");
            $(this).remove();
            $("input[value=" + username + "]").remove();
        });

        function showFileUploadModal(url, formId) {
            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("showing form", response.error);
                }
                else {
                    $('#' + formId + '-container').html(response);

                    $('#' + formId)
                        .removeData("validator") /* added by the raw jquery.validate plugin */
                        .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

                    // Client side validation for dynamic modal injection
                    $.validator.unobtrusive.parse($('#' + formId));

                    currentModal = $('#' + formId + '-modal');
                    currentModal.modal('show');
                }
            })
            .fail(function (error) {
                showFailureBootbox("showing form", error.statusText);
            });
        }

        $(document).on("change", "#FileData", function (e, data) {
            $(".file-error").html("");
            // Make sure the image size is less than 1MB
            if (this.files.length) {
                if (this.files[0].size > 1000000) {
                    $(".file-size-error").html("File size limit is 1 MB");
                }
            }
        });

        $("#dashboard").on("click", ".show-buttons-icon", function (e, data) {
            $('html,body').animate({
                scrollTop: $(this).parent().parent().offset().top
            }, 750);
        });

        $("#dashboard").on("click", ".hide-buttons-icon", function (e, data) {
            $('html,body').animate({
                scrollTop: $(this).closest('.card').offset().top
            }, 500);
        });

        $("#dashboard").on("click", ".show-buttons-icon", function (e, data) {
            // Only show tooltips on non-touchscreens
            if (!('ontouchstart' in window)) {
                $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
            }

            var parent = $(this).parent();

            $(parent).hide();
            $(parent).siblings('.album-list').children('.item-container').slideDown(200);
            $(parent).siblings('.tab-list').children('.item-container').slideDown(200);
            // Wait until the expansion animation is complete to show the buttons
            setTimeout(function () {
                $(parent).siblings('.album-list').children('.item-container').children().css("visibility", "visible");
                $(parent).siblings('.tab-list').children('.item-container').children().css("visibility", "visible");
            }, 200)
            $(parent).siblings('.hide-items-icon-container').slideDown();
        });

        $("#dashboard").on("click", ".hide-buttons-icon", function (e, data) {

            var parent = $(this).parent();

            $(parent).hide();
            $(parent).siblings('.album-list').children('.item-container').children().css("visibility", "hidden");
            $(parent).siblings('.album-list').children('.item-container').slideUp(200);
            $(parent).siblings('.tab-list').children('.item-container').children().css("visibility", "hidden");
            $(parent).siblings('.tab-list').children('.item-container').slideUp(200);
            $(parent).siblings('.show-items-icon-container').slideDown();
            });

        $("#dashboard").on("keypress", ".show-buttons-icon, .hide-buttons-icon", function (e, data) {
            var key = e.which;
            if (key === 13)  // the enter key code
            {
                $(this).click();
                return false;
            }
        });

        $("#dashboard").on("click", ".show-tabversions", function (e, data) {
            var that = this;
            $(this).hide();
            $(this).siblings('.tabversions-container').empty().append('<div class="loader"></div>')
            $(this).siblings('.tabversions-container').slideDown();
            var url = '@Url.Action("GetTabVersionsList", "TabVersions")?id=' + $(that).attr('data-tab-id');

            $.ajax({
                url: url,
                type: 'GET',
            })
            .then(function (response) {
                if (response.error) {
                    showFailureBootbox("retrieving tab versions", response.error);
                }
                else {
                    $(that).siblings('.tabversions-container').empty().append(response);
                    $(that).siblings('.tabversions-container').slideDown(200);
                }
            })
            .fail(function (error) {
                showFailureBootbox("retrieving tab versions", error.statusText);
            })

            $(this).siblings('.hide-tabversions').slideDown();
        });

        $("#dashboard").on("click", ".hide-tabversions", function (e, data) {
            $(this).hide();
            $(this).siblings('.tabversions-container').slideUp(200);
            $(this).siblings('.tabversions-container').empty();
            $(this).siblings('.show-tabversions').slideDown();
        });

        $("#dashboard").on("click", "#my-projects", function (e, data) {
            $('#my-projects').addClass('active');
            $('#contributor-projects').removeClass('active');
            $('.tree-wrapper-my-projects').show();
            $('.tree-wrapper-their-projects').hide();
        });

        $("#dashboard").on("click", "#contributor-projects", function (e, data) {
            $('#contributor-projects').addClass('active');
            $('#my-projects').removeClass('active');
            $('.tree-wrapper-their-projects').show();
            $('.tree-wrapper-my-projects').hide();
        });
//
// End Click Events 
//

//
// Submit Event
//
        $("#dashboard").on("submit", function (e, data) {
            e.preventDefault();

            // Don't submit form if the image is too large
            if ($("#FileData").length) {
                if ($('#FileData')[0].files.length) {
                    if ($('#FileData')[0].files[0].size > 1000000) {
                        return
                    }
                }
            }

            var $deferred = $.Deferred();

            // Don't submit form if the image is too large
            if ($('#Image').length) {
                if ($('#Image')[0].files.length) {
                    if ($('#Image')[0].files[0].size > 1000000) {
                        return
                    }
                    $('#image-upload').croppie('result', {
                        type: 'blob',
                        size: 'original',
                        format: 'jpeg'
                    }).then(function (blob) {
                        $deferred.resolve(blob);
                    });
                }
                else {
                    $deferred.resolve();
                }
            }
            else {
                $deferred.resolve();
            }

            $deferred.then(function (blob) {
                // Loop through all contributors to add index for model binding
                $('.contributor').each(function (index) {
                    $(this).attr('name', 'Contributors[' + index + '].Username');
                });

                var form = e.target;
                var formData = new FormData(form);

                if (blob) {
                    formData.append('CroppedImage', blob, 'image.jpeg');
                }

                // Show spinner on save button
                $('.button-save').html('<div class="loader"></div>');
                $('.button-save').addClass('disabled');
                $('.validation-error').html('');

                $.ajax({
                    url: form.action,
                    type: 'POST',
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false
                })
                .then(function (response) {
                    if (response.error) {
                        enableSubmitButton();
                        if (response.error.toLowerCase().includes('file')) {
                            if (currentModal.find("#image-error").length) {
                                currentModal.find("#image-error").html(response.error);
                            }
                            else if (currentModal.find('#file-error').length) {
                                currentModal.find("#file-error").html(response.error);
                            }                        
                        }
                        else {
                            showFailureBootbox("saving", response.error);
                        }
                    }
                    else if ($(window).width() <= 600) {
                        currentModal.modal('hide');
                        repopulateTabList();
                    }
                    else {
                        currentModal.modal('hide');
                        // Here we're replacing the tabversion table, which include tab id
                        // Then we're using that tab id to identify the jstree node
                        if (form.id === "tab-form") {
                            var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions", null)?id=' + response.id;

                            $.ajax({
                                url: url,
                                type: 'GET',
                            })
                            .then(function (response) {
                                if (response.error) {
                                    showFailureBootbox("retrieving tab versions", response.error);
                                }
                                else {
                                    $('#tabversions-table-container').empty().append(response);
                                    if (!('ontouchstart' in window)) {
                                        $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
                                    }
                                    // Call onResize to resize the user images
                                    onResize(false);
                                }
                            })
                            .fail(function (error) {
                                showFailureBootbox("retrieving tab versions", error.statusText);
                            })

                            var tabNode = $('#tab-' + response.id);

                            // Check to see if node already exists so we know whether to add a new node or edit an existing one
                            if (!tabNode.length) {
                                // Create new tab node and select it - expand and deselect project node
                                var currentNode = $(selectedTree).jstree().get_selected(true)[0];
                                $(selectedTree).jstree().open_node(currentNode.id, false, false);
                                if ($(selectedTree)[0].className.includes('owner-tree')) {
                                    $(selectedTree).jstree().create_node(currentNode.id, { id: "tab-" + response.id, li_attr: { "jstree-type": "owner", href: "/Tabs/Delete/" + response.id }, text: ' ' + response.name, icon: "/images/eighthnote(16x23).png" }, "last", false, false);
                                }
                                else {
                                    $(selectedTree).jstree().create_node(currentNode.id, { id: "tab-" + response.id, li_attr: { "jstree-type": "contributor" }, text: ' ' + response.name, icon: "/images/eighthnote(16x23).png" }, "last", false, false);
                                }
                                $(selectedTree).jstree().deselect_node(currentNode.id, false, false);
                                $(selectedTree).jstree().select_node("tab-" + response.id, false, false);
                            }
                            else {
                                $(".jstree").jstree('rename_node', tabNode, ' ' + response.name);
                            }
                        }
                        else if (form.id === "tabversion-form") {
                            var url = '@Url.Action("UpdateTabVersionsTable", "TabVersions", null)?id=' + response.id;

                            $.ajax({
                                url: url,
                                type: 'GET',
                            })
                            .then(function (response) {
                                if (response.error) {
                                    showFailureBootbox("retrieving tab versions", response.error);
                                }
                                else {
                                    $('#tabversions-table-container').empty().append(response);
                                    if (!('ontouchstart' in window)) {
                                        $('[data-toggle="tooltip"]').tooltip({ trigger: "hover" });
                                    }
                                    // Call onResize to resize the user images
                                    onResize(false);
                                }
                            })
                            .fail(function (error) {
                                showFailureBootbox("retrieving tab versions", error.statusText);
                            })
                        }
                        else if (form.id === "album-form") {
                            var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                            $.ajax({
                                url: url,
                                type: 'GET',
                            })
                            .then(function (response) {
                                if (response.error) {
                                    showFailureBootbox("retrieving tab versions", response.error);
                                }
                                else {
                                    $('#tabversions-table-container').empty().append(response);

                                    // Call onResize to resize the user images
                                    onResize(false);
                                }
                            })
                            .fail(function (error) {
                                showFailureBootbox("retrieving tab versions", error.statusText);
                            })

                            var albumNode = $('#album-' + response.id);

                            // Check to see if node already exists so we know whether to add a new node or edit an existing one
                            if (!albumNode.length) {
                                var currentNode = $(selectedTree).jstree().get_selected(true)[0];
                                $(selectedTree).jstree().open_node(currentNode.id, false, false);
                                if ($(selectedTree)[0].className.includes('owner-tree')) {
                                    $(selectedTree).jstree().create_node(currentNode.id, { id: "album-" + response.id, li_attr: { "jstree-type": "owner", href: "/Albums/Delete/" + response.id }, text: ' ' + response.name, icon: "album-" + response.id + "-image" }, "last", false, false);
                                }
                                else {
                                    $(selectedTree).jstree().create_node(currentNode.id, { id: "album-" + response.id, li_attr: { "jstree-type": "contributor" }, text: ' ' + response.name, icon: "album-" + response.id + "-image" }, "last", false, false);
                                }
                                $(selectedTree).jstree().deselect_node(currentNode.id, false, false);
                                $(selectedTree).jstree().select_node("album-" + response.id, false, false);

                                // Dynamically add the style for the node to add the image, which is required by jstree
                                $("<style> " +
                                    ".album-" + response.id + "-image {" +
                                    "background-image: url('" + response.imageFilePath + "')!important;" +
                                    "background-size: cover !important;" +
                                    "background-repeat: no-repeat !important;" +
                                    "background-position: center center !important;" +
                                    "}" +
                                    "</style > ").appendTo(document.documentElement);
                            }
                            else {
                                $(".jstree").jstree('rename_node', albumNode, ' ' + response.name);

                                // Dynamically add the style for the node to add the image, which is required by jstree
                                $(".album-" + response.id + "-image").attr("style",
                                    "background-image: url('" + response.imageFilePath + "')!important;" +
                                    "background-size: cover !important;" +
                                    "background-repeat: no-repeat !important;" +
                                    "background-position: center center !important;")
                            }
                        }
                        // This will handle new project
                        else if (form.id === "project-form") {
                            var url = '@Url.Action("GetEmptyTabVersionsTable", "TabVersions", null)';

                            $.ajax({
                                url: url,
                                type: 'GET',
                            })
                            .then(function (response) {
                                if (response.error) {
                                    showFailureBootbox("retrieving tab versions", response.error);
                                }
                                else {
                                    $('#tabversions-table-container').empty().append(response);
                                }
                            })
                            .fail(function (error) {
                                showFailureBootbox("retrieving tab versions", error.statusText);
                            })

                            var projectNode = $('#project-' + response.id);

                            // Check to see if node already exists so we know whether to add a new node or edit an existing one
                            if (!projectNode.length) {
                                var currentNode = $('.owner-tree').jstree().get_selected(true)[0];
                                if (currentNode != null) {
                                    $('.owner-tree').jstree().deselect_node(currentNode.id, false, false);
                                }
                                $('.owner-tree').jstree().create_node("#", { id: "project-" + response.id, li_attr: { "jstree-type": "owner", href: "/Projects/Delete/" + response.id }, text: ' ' + response.name, icon: "project-" + response.id + "-image" }, "last", false, false);
                                $('.owner-tree').jstree().select_node("project-" + response.id, false, false);

                                // Dynamically add the style for the node to add the image, which is required by jstree
                                $("<style> " +
                                    ".project-" + response.id + "-image {" +
                                    "background-image: url('" + response.imageFilePath + "')!important;" +
                                    "background-size: cover !important;" +
                                    "background-repeat: no-repeat !important;" +
                                    "background-position: center center !important;" +
                                    "}" +
                                    "</style > ").appendTo(document.documentElement);
                            }
                            else {
                                $(".jstree").jstree('rename_node', projectNode, ' ' + response.name); 

                                // Dynamically add the style for the node to add the image, which is required by jstree
                                $(".project-" + response.id + "-image").attr("style",
                                    "background-image: url('" + response.imageFilePath + "')!important;" +
                                    "background-size: cover !important;" +
                                    "background-repeat: no-repeat !important;" +
                                    "background-position: center center !important;")
                            }
                        }
                    }
                })
                .fail(function (error) {
                    showFailureBootbox("saving", error.statusText);
                    enableSubmitButton();
                });

            });
        });
//
// End Submit Event
//

//
// Misc Methods
//
        function getContributorCount() {
            return $('.contributor-btn').length;
        }

        // Make sure the treeview/table height is set properly on resize
        function onResize(setTreeWidth) {
            var dashboardHeight = $('#dashboard').outerHeight();
            var buttonContainerHeight = $('.buttons-container').outerHeight();
            var treeTableContainerHeight = ((dashboardHeight - buttonContainerHeight) / dashboardHeight) * 100;
            var tabVersionTableWidth = $('.tabversions-table').width();

            if (tabVersionTableWidth < 883) {
                $('.user-image-col').hide();
            }
            else {
                $('.user-image-col').show();
            }

            if ($(window).width() < 760) {
                $('.lg-device-col').hide();
            }
            else {
                $('.lg-device-col').show();
            }

            if ($(window).width() <= 600) {
                // Don't make any changes if we're already in mobile view
                if ($('.projects-container').is(":visible")) {
                    return;
                }

                $('.buttons-container').hide();
                $('#tree-table-container').hide();

                $('.list-loader-wrapper').show();

                repopulateTabList().then(_ => {
                    // Make sure we're still less than 600px since this is async
                    if ($(window).width() <= 600) {
                        $('.list-loader-wrapper').hide();
                        // Handles the transition between mobile view and full screen view
                        $('.dashboard-container').css('min-height', '100%');
                        $('.dashboard-container').css('height', 'unset');

                        $('.projects-container').show();
                    }
                })
            }
            else {
                $('.buttons-container').show();
                $('#tree-table-container').show();
                $('.projects-container').hide(); 

                // Handles the transition between mobile view and full screen view
                $('.dashboard-container').css('min-height', 'unset');
                $('.dashboard-container').css('height', '100%');

                $('.list-loader-wrapper').hide();
            }

            if (setTreeWidth) {
                if ($(window).width() >= 760 && $(window).width() < 1150) {
                    $('.tree-wrapper-container').css('width', '35%');
                }
                else if ($(window).width() < 760) {
                    $('.tree-wrapper-container').css('width', '50%');
                }
                else {
                    $('.tree-wrapper-container').css('width', '20%');
                }
            }

            $('.tabversion-user-image').css('height', $('.tabversion-user-image').css('width'));
        };

        window.addEventListener("resize", function () {
            onResize(true);
        });

        function enableSubmitButton() {
            $('.button-save').html('Save');
            $('.button-save').removeClass('disabled');
        }

        $('#project-form-modal').on('hidden.bs.modal', function (e) {
            $('#project-form-container').html('');
        });
        $('#album-form-modal').on('hidden.bs.modal', function (e) {
            $('#album-form-container').html('');
        });
        $('#tab-form-modal').on('hidden.bs.modal', function (e) {
            $('#tab-form-container').html('');
        });
        $('#tabversion-form-modal').on('hidden.bs.modal', function (e) {
            $('#tabversion-form-container').html('');
        });

        function repopulateTabList() {
            return new Promise((resolve, reject) => {
                var url = '@Url.Action("GetTabListPartialView", "Tabs", null)';

                $.ajax({
                    url: url,
                    type: 'GET',
                })
                .then(function (response) {
                    if (response.error) {
                        showFailureBootbox("retrieving tab list", response.error);
                    }
                    else {                        
                        $('.mobile-button-container').nextAll().remove();
                        $('.mobile-button-container').after(response);
                    }

                    resolve();
                })
                .fail(function (error) {
                    showFailureBootbox("retrieving tab list", error.statusText.error);
                    reject();
                })
            })
        }
//
// End Misc Methods
//
    });
</script>
}

