@model IEnumerable<TabRepository.ViewModels.ProjectIndexViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="buttons-container">
    @Html.ActionLink("New Project", "GetProjectFormPartialView", "Projects", null, new { @class = "btn btn-primary", id = "new-project-button" })
</div>


<div id="project-list-wrapper"></div>

<div id='project-form-modal' class='modal fade'>
    <div id='project-form-container'>
    </div>
</div>

<div id='album-form-modal' class='modal fade'>
    <div id='album-form-container'>
    </div>
</div>

@section scripts
{
    <script src="~/js/jstree.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

    <script>
    $(document).ready(function () {
        repopulateProjectList();

        // Deleting a project
        $(document).on("click", "#delete-project-button", function (e, data) {
            e.preventDefault();

            var href = this.href;

            bootbox.confirm("Are you sure you wish to delete this project? This cannot be undone.", function (result) {
                if (result) {
                    $.ajax({
                        url: href,
                        type: 'DELETE',
                    })
                    .then(function (response) {
                        repopulateProjectList();
                    })
                    .fail(function (error) {
                        bootbox.alert("Unable to delete project. Error: " + error.statusText);
                    })
                }
            });
        });

        // Show modal for new project
        $(document).on("click", "#new-project-button", function (e, data) {
            e.preventDefault();

            var href = this.href;

            $.ajax({
                url: href,
                type: 'GET',
            })
            .then(function (data) {
                $('#project-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#project-form"));

                currentModal = $('#project-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show project form. Error: " + error.statusText);
            })
        });

        // Show modal for edit project
        $(document).on("click", "#edit-project-button", function (e, data) {
            e.preventDefault();

            var href = this.href;

            $.ajax({
                url: href,
                type: 'GET',
            })
            .then(function (data) {
                $('#project-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#project-form"));

                currentModal = $('#project-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show project form. Error: " + error.statusText);
            })
        });

        // Show modal for new album
        $(document).on("click", "#new-album-button", function (e, data) {
            e.preventDefault();

            var href = this.href + "/?projectId=" + $(this).attr("data-project-id");

            $.ajax({
                url: href,
                type: 'GET',
            })
            .then(function (data) {
                $('#album-form-container').html(data);
                // Client side validation for dynamic modal injection
                $.validator.unobtrusive.parse($("#album-form"));

                currentModal = $('#album-form-modal');
                currentModal.modal('show');

            })
            .fail(function (error) {
                bootbox.alert("Unable to show album form. Error: " + error.statusText);
            })
        });

        $(document).on("submit", function (e, data) {
            e.preventDefault();

            var form = e.target;
            var formData = new FormData(form);

            $.ajax({
                url: form.action,
                type: 'POST',
                data: formData,
                cache: false,
                contentType: false,
                processData: false
            })
            .then(function (response) {
                currentModal.modal('hide');
                // Call GetProjectListPartialView to repopulate the project list
                repopulateProjectList();
            })
            .fail(function (error) {
                currentModal.modal('hide');
                handleSaveError(xhr.status);
            })
        });


        function repopulateProjectList() {
            var url = '@Url.Action("GetProjectListPartialView", "Projects", null)';

            $.get(url, function (data) {
                $('#project-list-wrapper').empty().append(data);
            });
        }
        });
    </script>
}





